<!DOCTYPE html>
<html  lang="en" dir="ltr">
  <head>
    <meta charset="utf-8" />
<script>(function(i,s,o,g,r,a,m){i["GoogleAnalyticsObject"]=r;i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)})(window,document,"script","https://www.google-analytics.com/analytics.js","ga");ga("create", "UA-2728311-17", {"cookieDomain":"auto"});ga("set", "anonymizeIp", true);ga("send", "pageview");</script>
<meta name="Generator" content="Drupal 8 (https://www.drupal.org)" />
<meta name="MobileOptimized" content="width" />
<meta name="HandheldFriendly" content="true" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<link rel="shortcut icon" href="sites/default/files/favicon-64.png" type="image/png" />
<link rel="alternate" hreflang="en" href="using-bc-and-getplayer-methods.html" />
<link rel="canonical" href="using-bc-and-getplayer-methods.html" />
<link rel="shortlink" href="using-bc-and-getplayer-methods.html" />
<link rel="revision" href="using-bc-and-getplayer-methods.html" />

    <title>Using bc() and getPlayer() Methods | Brightcove Learning</title>
    <link rel="stylesheet" media="all" href="sites/default/files/css/css_d7PoQ20hWbRiei75VgExP_tm8C1ylIRfzB3zIYLc5Cw_q23msc.css" />
<link rel="stylesheet" media="all" href="https://cdn.jsdelivr.net/npm/bootstrap@3.4.1/dist/css/bootstrap.min.css" />
<link rel="stylesheet" media="all" href="https://cdn.jsdelivr.net/npm/@unicorn-fail/drupal-bootstrap-styles@0.0.2/dist/3.4.0/8.x-3.x/drupal-bootstrap.min.css" />


    
<!--[if lte IE 8]>
<script src="/sites/default/files/js/js_VtafjXmRvoUgAzqzYTA3Wrjkx9wcWhjP0G4ZnnqRamA.js"></script>
<![endif]-->

    <meta name="uri-translation" content="on" />
    <script>
window['_fs_debug'] = false; window['_fs_host'] = 'fullstory.com';
window['_fs_org'] = 'BX3Q1';
window['_fs_namespace'] = 'FS';
(function(m,n,e,t,l,o,g,y){
if (e in m) {if(m.console && m.console.log) { m.console.log('FullStory namespace conflict. Please set window["_fs_namespace"].');} return;}
g=m[e]=function(a,b){g.q?g.q.push([a,b]):g._api(a,b);};g.q=[];
o=n.createElement(t);o.async=1;o.src='https://'+_fs_host+'/s/fs.js';
y=n.getElementsByTagName(t)[0];y.parentNode.insertBefore(o,y);
g.identify=function(i,v){g(l,{uid:i});if(v)g(l,v)};g.setUserVars=function(v){g(l,v)};
g.shutdown=function(){g("rec",!1)};g.restart=function(){g("rec",!0)};
g.consent=function(a){g("consent",!arguments.length||a)};
g.identifyAccount=function(i,v){o='account';v=v||{};v.acctId=i;g(o,v)};
g.clearUserCookie=function(){};
})(window,document,window['_fs_namespace'],'script','user');
    </script>
  </head>
  <body class="path-node page-node-type-support-doc has-glyphicons">


<section id="block-gtranslate" class="block block-gtranslate block-gtranslate-block clearfix">
  
    

      



  </section>


  </div>

      </div>
      

                    <div class="navbar-collapse collapse">
            <div class="region region-navigation-collapsible">
    

  </div>

        </div>
          </header>
  
    <div class="full-width-headline">
    <div class="container">
      <div class="row">
        <div class="col-sm-12" role="heading">
            <div class="region region-header">
          <section id="block-brightcoveheadlineblock" class="block block-bc-general block-bc-general-headline-block clearfix">
  
    

      Documentation
  </section>


  </div>

        </div>
      </div>
    </div>
  </div>
  
      <div role="main" class="main-container container  js-quickedit-main-content">
    <div class="row">

                              <aside class="col-sm-3" role="complementary">
              <div class="region region-sidebar-first">
    <section class="bc-search-fixes-search-block-form block block-bc-search-fixes block-bc-search-fixes-search-block clearfix" data-drupal-selector="bc-search-fixes-search-block-form" id="block-brightcovesearchblock">
  
    

      <form action="using-bc-and-getplayer-methods.html" method="post" id="bc-search-fixes-search-block-form" accept-charset="UTF-8">
  <div class="form-item js-form-item form-type-textfield js-form-type-textfield form-item-search js-form-item-search form-no-label form-group">
      <label for="edit-search" class="control-label sr-only">Search</label>
  
  
  <input data-drupal-selector="edit-search" class="form-text form-control" type="text" id="edit-search" name="search" value="" size="15" maxlength="128" placeholder="Search" />

  
  
  </div>
<input autocomplete="off" data-drupal-selector="form-ou-jl4mlu0p5v-ol83aepbtovuduuxsw6bixbyct1-g" type="hidden" name="form_build_id" value="form-ou-Jl4mLU0P5v-oL83aEPbToVuduUxsW6BixBycT1-g" /><input data-drupal-selector="edit-bc-search-fixes-search-block-form" type="hidden" name="form_id" value="bc_search_fixes_search_block_form" /><div data-drupal-selector="edit-actions" class="form-actions form-group js-form-wrapper form-wrapper" id="edit-actions"><button data-drupal-selector="edit-submit" class="button js-form-submit form-submit btn-primary btn icon-only" type="submit" id="edit-submit" name="op" value="Search"><span class="sr-only">Search</span><span class="icon glyphicon glyphicon-search" aria-hidden="true"></span></button></div>

</form>

  </section>

<section id="block-inpagenavigationblock" class="hidden-xs block block-bc-ipnav block-bc-ipnav-block clearfix">
  
      <h2 class="block-title">On This Page</h2>
    

      <div class="bc-ipnav-block"></div>
  </section>


  </div>

          </aside>
              
                  <section class="col-sm-9">

                                      <div class="highlighted">  <div class="region region-highlighted">
    <div data-drupal-messages-fallback class="hidden"></div>

  </div>
</div>
                  
                
                
                
                          <a id="main-content"></a>
            <div class="region region-content">
        <h1 class="page-header"><span>Using bc() and getPlayer() Methods</span>
</h1>

  
<div class="node node--type-support-doc node--view-mode-full bcdocs-four-rows clearfix">

  

  <div class="group-first-row">
      </div>

  <div class="group-second-row">
  
  <div class="field field--name-field-products field--type-entity-reference field--label-visually_hidden">
    <div class="field--label sr-only">Product(s)</div>
          <div class="field__items taxonomy__tags">
        <svg class="icon--product" viewBox="0 0 100 100">
          <use xlink:href="//support.brightcove.com/themes/custom/bcdocs/images/icons.svg#icon--product"></use>
        </svg>
              <div class="field--item">Video Cloud</div>
          <div class="field--item">Brightcove Player</div>
              </div>
      </div>

  <div class="field field--name-field-roles field--type-entity-reference field--label-visually_hidden">
    <div class="field--label sr-only">Role(s)</div>
          <div class="field__items taxonomy__tags">
        <svg class="icon--roles" viewBox="0 0 100 100">
          <use xlink:href="//support.brightcove.com/themes/custom/bcdocs/images/icons.svg#icon--roles"></use>
        </svg>
              <div class="field--item">Player Developer</div>
              </div>
      </div>

</div>

  
<div class="group-third-row taxonomy__tags">
      <svg class="icon--label" viewBox="0 0 100 100">
      <use xlink:href="//support.brightcove.com/themes/custom/bcdocs/images/icons.svg#icon--label"></use>
    </svg>
    
  <div class="field field--name-field-tasks field--type-entity-reference field--label-visually_hidden">
    <div class="field--label sr-only">Task(s)</div>
          <div class="field--items">
              <div class="field--item">Create &amp; Configure Players</div>
          <div class="field--item">Get Started with Player Development</div>
              </div>
      </div>

  <div class="field field--name-field-type field--type-entity-reference field--label-visually_hidden">
    <div class="field--label sr-only">Type</div>
              <div class="field--item">Support Doc</div>
          </div>

</div>

  <div class="group-fourth-row">
  
            <div class="field field--name-field-support-doc-body field--type-text-with-summary field--label-hidden field--item"><p>In this topic, you will learn about the <code>bc()</code> and <code>getPlayer()</code> methods, including the function of each and best practices of their use. Also included in this document is a comparison of the <code>getPlayer()</code> and <code>videojs()</code> methods for obtaining a reference to a Brightcove Player.</p><article class="bcls-article"><section class="bcls-section"><h2 id="Introduction">Introduction</h2>

<p>A basic requirement when doing development with Brightcove Player is obtaining a reference to the player. The best practice for performing this has changed over the life of Brightcove Player 6.x. Here are best practices you should follow (details for each bullet are later in this document):</p>

<ul><li class="language-editable">To get a reference to the player when using a version of the <code>&lt;video&gt;</code> tag, do one the following:

	<ul><li class="language-editable"><strong>v6.16.0+</strong> use the <code>videojs.getPlayer()</code> method.</li>
		<li class="language-editable"><strong>Before v6.16.0</strong> use the <code>videojs()</code> method.</li>
	</ul></li>
	<li class="language-editable">When using the <strong>Advanced (in-page embed)</strong> player implementation, the best practice is:
	<ul><li class="language-editable"><strong>v6.11.0+</strong> use the <code>&lt;video-js&gt;</code> tag.</li>
		<li class="language-editable"><strong>Before v6.11.0</strong> use the <code>&lt;video&gt;</code> tag.</li>
	</ul></li>
	<li class="language-editable">If you are manually instantiating the player on the page, use the <code>bc()</code> method, which will generate a reference to the player.</li>
</ul></section><section class="bcls-section"><h2 id="reference"><code>getPlayer()</code> versus <code>videojs()</code></h2>

<p>If you have been doing development with Brightcove Player for any length of time, you almost assuredly have seen code similar to the following used to get a reference to the player and store it in the <code>myPlayer</code> variable:</p>

<pre class="line-numbers">
  <code class="language-javascript">videojs('myPlayerID').ready(function(){
    var myPlayer = this;
  });</code></pre>

<p>If you are using <strong>v6.16.0+</strong> it is a cleaner use of the API, and a recommended best practice, to use <code>player.getPlayer()</code> <strong>instead</strong>, as shown here:</p>

<pre class="line-numbers">
  <code class="language-javascript">videojs.getPlayer('myPlayerID').ready(function() {
    var myPlayer = this;
  });
  </code></pre>
</section><section class="bcls-section"><h2 id="versus"><code>video-js</code> tag versus <code>video</code> tag</h2>

<p>For Brightcove Player <strong>v6.11.0+</strong> it is a best practice to use <code>&lt;video-js&gt;</code> over <code>&lt;video&gt;</code>. The reasons for this are:</p>

<ul><li class="language-editable">Using <code>&lt;video-js&gt;</code> will prevent the flash of native controls problem you can get with a <code>&lt;video&gt;</code> element. An example of this is in Chrome versions 67+. Chrome will display a broken video icon momentarily until the <code>&lt;video&gt;</code> tag gets converted into a Brightcove Player. The icon appears as follows:

	<figure class="bcls-figure"><img class="bcls-image" width="200" height="109" alt="chrome broken video icon" src="https://learning-services-media.brightcove.com/doc-assets/general/chrome-broken-video-icon.png" /></figure></li>
	<li class="language-editable">In some cases, such as when using non-Video Cloud media, using <code>&lt;video-js&gt;</code> will give the player more control over the initialization process. This prevents any automatic browser behaviors that may be associated with the <code>&lt;video&gt;</code> element.</li>
</ul></section><section class="bcls-section"><h2 id="bc_method_details"><code>bc()</code> method details</h2>

<p>The <code>bc()</code> method is used to instantiate a player at a time of your choosing. The <a href="delaying-player-instantiation.html">Delaying Player Instantiation</a> document discusses use cases and implementations. The <a href="brightcove-player-sample-vertical-volume-control.html">Brightcove Player Sample: Vertical Volume Control</a> shows another use of the <code>bc()</code> method where you want to change the direction of the volume control to vertical, which must occur before the player is instantiated.</p>

<p>The syntax of the method is:</p>

<pre class="line-numbers">
  <code class="language-javascript">bc(id,options)</code></pre>

<p>where:</p>

<ul><li class="language-editable"><code>id</code>:

	<ul><li class="language-editable">Description: Video element or video element ID</li>
		<li class="language-editable">Datatype: string|Element</li>
		<li class="language-editable">Required: true</li>
	</ul></li>
	<li class="language-editable"><code>options</code>:
	<ul><li class="language-editable">Description: Options object for providing settings</li>
		<li class="language-editable">Datatype: Object</li>
		<li class="language-editable">Required: false</li>
	</ul></li>
	<li class="language-editable">The method returns a Brightcove Player instance</li>
</ul><p>For example, you could have the following <code>video-js</code> tag and then JavaScript to configure the player:</p>

<pre class="line-numbers">
  <code class="language-html">&lt;video-js id="myPlayerID"
     data-embed="default"
     data-application-id
     class="video-js"
     width="640" height="360"
     controls&gt;&lt;/video-js&gt;
  &lt;script src="https://players.brightcove.net/1752604059001/default_default/index.min.js"&gt;&lt;/script&gt;
  
  &lt;script type="text/javascript"&gt;
    // +++ Define the player options +++
    var <span class="bcls-highlight">options</span> = {
      controlBar: {
        volumePanel: {
          inline: false,
          vertical: true
        }
      }
    };
  
    // +++ Add the player attributes +++
    var myPlayerEl = document.getElementById("myPlayerID");
    myPlayerEl.setAttribute('data-account', 1752604059001);
    myPlayerEl.setAttribute('data-player', 'default');
    myPlayerEl.setAttribute('data-video-id', 5557662144001);
  
    // +++ Create the player +++
    <span class="bcls-highlight">bc(myPlayerEl, options);</span>
  &lt;/script&gt;</code></pre>

<p>Of the normal player configuration options (detailed in the <a href="player-configuration-guide.html">Player Configuration Guide</a>), the following can be used with the <code>bc()</code> method:</p>

<table class="bcls-table"><thead class="bcls-table__head"><tr><th>Valid Configuration Options</th>
		</tr></thead><tbody class="bcls-table__body"><tr><td><span class="”notranslate”">autoplay</span></td>
		</tr><tr><td><span class="”notranslate”">language</span></td>
		</tr><tr><td><span class="”notranslate”">languages</span></td>
		</tr><tr><td><span class="”notranslate”">loop</span></td>
		</tr><tr><td><span class="”notranslate”">muted</span></td>
		</tr><tr><td><span class="”notranslate”">playsinline</span></td>
		</tr><tr><td><span class="”notranslate”">preload</span></td>
		</tr><tr><td><span class="”notranslate”">techOrder</span></td>
		</tr></tbody></table></section></article></div>
      
</div>

</div>


<section class="views-element-container block block-views block-views-blockrelated-content-by-field-block-1 clearfix" id="block-views-block-related-content-by-field-block-1">
  
    

      <div class="form-group"><div class="view view-related-content-by-field view-id-related_content_by_field view-display-id-block_1 js-view-dom-id-c8c982f658fe3c46256a4632f698a9f73a1b91ae27ac4cab523cbee27907d358">
  
    
      <div class="view-header">
      <h2>Related content</h2>
    </div>
      
      <div class="view-content">
      <div class="item-list">
  
  <ul>

          <li><div class="views-field views-field-title"><span class="field-content"><span class="content-type-support_doc"><a href="delaying-player-instantiation.html" hreflang="en">Delaying Player Instantiation</a></span></span></div></li>
          <li><div class="views-field views-field-title"><span class="field-content"><span class="content-type-support_doc"><a href="brightcove-player-sample-vertical-volume-control.html" hreflang="en">Brightcove Player Sample: Vertical Volume Control</a></span></span></div></li>
          <li><div class="views-field views-field-title"><span class="field-content"><span class="content-type-support_doc"><a href="player-configuration-guide.html" hreflang="en">Player Configuration Guide</a></span></span></div></li>
    
  </ul>

</div>

    </div>
  
          </div>
</div>

  </section>


  </div>

              </section>

                </div>
  </div>

      
  
  </div>

    
    <script type="application/json" data-drupal-selector="drupal-settings-json">{"path":{"baseUrl":"\/","scriptPath":null,"pathPrefix":"","currentPath":"node\/18712","currentPathIsAdmin":false,"isFront":false,"currentLanguage":"en"},"pluralDelimiter":"\u0003","google_analytics":{"trackOutbound":true,"trackMailto":true,"trackDownload":true,"trackDownloadExtensions":"7z|aac|arc|arj|asf|asx|avi|bin|csv|doc(x|m)?|dot(x|m)?|exe|flv|gif|gz|gzip|hqx|jar|jpe?g|js|mp(2|3|4|e?g)|mov(ie)?|msi|msp|pdf|phps|png|ppt(x|m)?|pot(x|m)?|pps(x|m)?|ppam|sld(x|m)?|thmx|qtm?|ra(m|r)?|sea|sit|tar|tgz|torrent|txt|wav|wma|wmv|wpd|xls(x|m|b)?|xlt(x|m)|xlam|xml|z|zip"},"bootstrap":{"forms_has_error_value_toggle":1,"modal_animation":1,"modal_backdrop":"true","modal_focus_input":1,"modal_keyboard":1,"modal_select_text":1,"modal_show":1,"modal_size":"","popover_enabled":1,"popover_animation":1,"popover_auto_close":1,"popover_container":"body","popover_content":"","popover_delay":"0","popover_html":0,"popover_placement":"right","popover_selector":"","popover_title":"","popover_trigger":"click"},"ajaxTrustedUrl":{"form_action_p_pvdeGsVG5zNF_XLGPTvYSKCf43t8qZYSwcfZl2uzM":true},"user":{"uid":0,"permissionsHash":"3b7fdb4927baca3ee2939edeb777485b3e2c2d36cf8c80e0d8f49c6dc5e2eeca"}}</script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@3.4.1/dist/js/bootstrap.min.js" integrity="sha256-nuL8/2cJ5NDSSwnKD8VqreErSWHtnEP9E7AySL+1ev4=" crossorigin="anonymous"></script>

  <script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","licenseKey":"e78a80aa93","applicationID":"129613202","transactionName":"YwBUZkcFVktUWhJQX1pKd1FBDVdWGkkHXlVrBldRXQE=","queueTime":0,"applicationTime":12,"atts":"T0dXEA8fRUU=","errorBeacon":"bam.nr-data.net","agent":""}</script></body>
</html>
