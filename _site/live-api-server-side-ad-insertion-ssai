<!DOCTYPE html>
<html  lang="en" dir="ltr">
  <head>
    <meta charset="utf-8" />
<script>(function(i,s,o,g,r,a,m){i["GoogleAnalyticsObject"]=r;i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)})(window,document,"script","https://www.google-analytics.com/analytics.js","ga");ga("create", "UA-2728311-17", {"cookieDomain":"auto"});ga("set", "anonymizeIp", true);ga("send", "pageview");</script>
<meta name="Generator" content="Drupal 8 (https://www.drupal.org)" />
<meta name="MobileOptimized" content="width" />
<meta name="HandheldFriendly" content="true" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<link rel="shortcut icon" href="sites/default/files/favicon-64.png" type="image/png" />
<link rel="alternate" hreflang="en" href="live-api-server-side-ad-insertion-ssai.html" />
<link rel="canonical" href="live-api-server-side-ad-insertion-ssai.html" />
<link rel="shortlink" href="live-api-server-side-ad-insertion-ssai.html" />
<link rel="revision" href="live-api-server-side-ad-insertion-ssai.html" />

    <title>Live API: Server-Side Ad Insertion (SSAI) | Brightcove Learning</title>
    <link rel="stylesheet" media="all" href="sites/default/files/css/css_d7PoQ20hWbRiei75VgExP_tm8C1ylIRfzB3zIYLc5Cw_q23msc.css" />
<link rel="stylesheet" media="all" href="https://cdn.jsdelivr.net/npm/bootstrap@3.4.1/dist/css/bootstrap.min.css" />
<link rel="stylesheet" media="all" href="https://cdn.jsdelivr.net/npm/@unicorn-fail/drupal-bootstrap-styles@0.0.2/dist/3.4.0/8.x-3.x/drupal-bootstrap.min.css" />


    
<!--[if lte IE 8]>
<script src="/sites/default/files/js/js_VtafjXmRvoUgAzqzYTA3Wrjkx9wcWhjP0G4ZnnqRamA.js"></script>
<![endif]-->

    <meta name="uri-translation" content="on" />
    <script>
window['_fs_debug'] = false; window['_fs_host'] = 'fullstory.com';
window['_fs_org'] = 'BX3Q1';
window['_fs_namespace'] = 'FS';
(function(m,n,e,t,l,o,g,y){
if (e in m) {if(m.console && m.console.log) { m.console.log('FullStory namespace conflict. Please set window["_fs_namespace"].');} return;}
g=m[e]=function(a,b){g.q?g.q.push([a,b]):g._api(a,b);};g.q=[];
o=n.createElement(t);o.async=1;o.src='https://'+_fs_host+'/s/fs.js';
y=n.getElementsByTagName(t)[0];y.parentNode.insertBefore(o,y);
g.identify=function(i,v){g(l,{uid:i});if(v)g(l,v)};g.setUserVars=function(v){g(l,v)};
g.shutdown=function(){g("rec",!1)};g.restart=function(){g("rec",!0)};
g.consent=function(a){g("consent",!arguments.length||a)};
g.identifyAccount=function(i,v){o='account';v=v||{};v.acctId=i;g(o,v)};
g.clearUserCookie=function(){};
})(window,document,window['_fs_namespace'],'script','user');
    </script>
  </head>
  <body class="path-node page-node-type-support-doc has-glyphicons">


<section id="block-gtranslate" class="block block-gtranslate block-gtranslate-block clearfix">
  
    

      



  </section>


  </div>

      </div>
      

                    <div class="navbar-collapse collapse">
            <div class="region region-navigation-collapsible">
    

  </div>

        </div>
          </header>
  
    <div class="full-width-headline">
    <div class="container">
      <div class="row">
        <div class="col-sm-12" role="heading">
            <div class="region region-header">
          <section id="block-brightcoveheadlineblock" class="block block-bc-general block-bc-general-headline-block clearfix">
  
    

      Documentation
  </section>


  </div>

        </div>
      </div>
    </div>
  </div>
  
      <div role="main" class="main-container container  js-quickedit-main-content">
    <div class="row">

                              <aside class="col-sm-3" role="complementary">
              <div class="region region-sidebar-first">
    <section class="bc-search-fixes-search-block-form block block-bc-search-fixes block-bc-search-fixes-search-block clearfix" data-drupal-selector="bc-search-fixes-search-block-form" id="block-brightcovesearchblock">
  
    

      <form action="live-api-server-side-ad-insertion-ssai.html" method="post" id="bc-search-fixes-search-block-form" accept-charset="UTF-8">
  <div class="form-item js-form-item form-type-textfield js-form-type-textfield form-item-search js-form-item-search form-no-label form-group">
      <label for="edit-search" class="control-label sr-only">Search</label>
  
  
  <input data-drupal-selector="edit-search" class="form-text form-control" type="text" id="edit-search" name="search" value="" size="15" maxlength="128" placeholder="Search" />

  
  
  </div>
<input autocomplete="off" data-drupal-selector="form-ou-jl4mlu0p5v-ol83aepbtovuduuxsw6bixbyct1-g" type="hidden" name="form_build_id" value="form-ou-Jl4mLU0P5v-oL83aEPbToVuduUxsW6BixBycT1-g" /><input data-drupal-selector="edit-bc-search-fixes-search-block-form" type="hidden" name="form_id" value="bc_search_fixes_search_block_form" /><div data-drupal-selector="edit-actions" class="form-actions form-group js-form-wrapper form-wrapper" id="edit-actions"><button data-drupal-selector="edit-submit" class="button js-form-submit form-submit btn-primary btn icon-only" type="submit" id="edit-submit" name="op" value="Search"><span class="sr-only">Search</span><span class="icon glyphicon glyphicon-search" aria-hidden="true"></span></button></div>

</form>

  </section>

<section id="block-inpagenavigationblock" class="hidden-xs block block-bc-ipnav block-bc-ipnav-block clearfix">
  
      <h2 class="block-title">On This Page</h2>
    

      <div class="bc-ipnav-block"></div>
  </section>


  </div>

          </aside>
              
                  <section class="col-sm-9">

                                      <div class="highlighted">  <div class="region region-highlighted">
    <div data-drupal-messages-fallback class="hidden"></div>

  </div>
</div>
                  
                
                
                
                          <a id="main-content"></a>
            <div class="region region-content">
        <h1 class="page-header"><span>Live API: Server-Side Ad Insertion (SSAI)</span>
</h1>

  
<div class="node node--type-support-doc node--view-mode-full bcdocs-four-rows clearfix">

  

  <div class="group-first-row">
      </div>

  <div class="group-second-row">
  
  <div class="field field--name-field-products field--type-entity-reference field--label-visually_hidden">
    <div class="field--label sr-only">Product(s)</div>
          <div class="field__items taxonomy__tags">
        <svg class="icon--product" viewBox="0 0 100 100">
          <use xlink:href="//support.brightcove.com/themes/custom/bcdocs/images/icons.svg#icon--product"></use>
        </svg>
              <div class="field--item">Video Cloud</div>
          <div class="field--item">Live</div>
          <div class="field--item">SSAI</div>
              </div>
      </div>

  <div class="field field--name-field-roles field--type-entity-reference field--label-visually_hidden">
    <div class="field--label sr-only">Role(s)</div>
          <div class="field__items taxonomy__tags">
        <svg class="icon--roles" viewBox="0 0 100 100">
          <use xlink:href="//support.brightcove.com/themes/custom/bcdocs/images/icons.svg#icon--roles"></use>
        </svg>
              <div class="field--item">API Developer</div>
              </div>
      </div>

</div>

  
<div class="group-third-row taxonomy__tags">
      <svg class="icon--label" viewBox="0 0 100 100">
      <use xlink:href="//support.brightcove.com/themes/custom/bcdocs/images/icons.svg#icon--label"></use>
    </svg>
    
  <div class="field field--name-field-topics field--type-entity-reference field--label-visually_hidden">
    <div class="field--label sr-only">Topic(s)</div>
          <div class="field--items">
              <div class="field--item">Live Streaming</div>
          <div class="field--item">SSAI</div>
              </div>
      </div>

  <div class="field field--name-field-apis field--type-entity-reference field--label-visually_hidden">
    <div class="field--label sr-only">API(s)</div>
          <div class="field--items">
              <div class="field--item">Live API</div>
              </div>
      </div>

</div>

  <div class="group-fourth-row">
  
            <div class="field field--name-field-support-doc-body field--type-text-with-summary field--label-hidden field--item"><p>This topic shows you how to set up server-side ad insertion (SSAI) for your live stream jobs.</p>
                <article class="bcls-article"><section class="bcls-section"><h2 id="Overview">Overview</h2>

<p><span class="”notranslate”">SSAI</span> allows you display ads during a live streaming event at specified times. The main features include:</p>

<ul><li>Insert ads using cue points sent from your encoder or create an instant cue point using the <span class="notranslate">Live API</span></li>
	<li>Ingest "slate" assets to fill any unused ad time</li>
	<li>Avoid ad blockers with ads that are stitched into the live stream on the server side</li>
</ul><aside class="bcls-aside bcls-aside--information">Before you can use <span class="”notranslate”">SSAI</span>, it must be enabled for your account. Contact your account manager for details.</aside><p>To create a Live stream with server-side ads, follow these steps:</p>

<ol class="bcls-tasklist__restart"><li><a href="#General_information">Review the general information about the Live API</a></li>
	<li><a href="#Create_an_ad_configuration">Create a live ad configuration</a>. You can also do this in <a href="configuring-server-side-ad-settings.html#bc-ipnav-1">Video Cloud Studio</a>. See the sections below for details about managing your ad configurations using the Live API.</li>
	<li><a href="#Managing_slates">Create slate assets</a>. If you prefer a UI, you can <a href="implementing-server-side-ads-live-module.html#fill_slate">manage slates in Studio</a>.</li>
	<li>Optional: <a href="live-api-cue-points-and-ad-beacons-ssai.html">Insert cue points and ad beacons</a>.</li>
	<li>Now, you are ready to <a href="quick-start-create-live-stream-using-brightcove-live-api.html">create a Live stream Using the Live API</a>. If you prefer to use Studio, you can <a href="implementing-server-side-ads-live-module.html">implement server-side ads in the Live module</a></li>
</ol><p>See the rest of this document for details about custom headers, ad config variables, using DFP and ad macros.</p>
</section><section class="bcls-section"><h2 id="General_information">General information</h2>

<p>The following information pertains to all Live API with SSAI requests.</p>

<h3>Base URL</h3>

<p>The base URL for the Live API with SSAI is:</p>

<pre>
    <code class="notranslate language-http">https://api.bcovlive.io/v1/ssai</code></pre>

<h3>Authentication</h3>

<p>Authentication for requests requires a header with an API key:</p>

<pre class="line-numbers">
    <code class="language-http notranslate">X-API-KEY: <span class="bcls-input">your API KEY</span>
    </code></pre>

<p>Contact your account manager to get an API key associated with your account.</p>
</section><section class="bcls-section"><h2 id="Create_an_ad_configuration">Create an ad configuration</h2>

<p>To create a new ad configuration, send a <code>POST</code> request as follows:</p>

<table class="bcls-table"><tbody class="bcls-table__body"><tr><th>Method</th>
			<td style="width:80em;"><code class="language-http notranslate">POST</code></td>
		</tr><tr><th>URL</th>
			<td><code class="language-http notranslate">https://api.bcovlive.io/v1/ssai/applications</code></td>
		</tr><tr><th>Header</th>
			<td><code class="language-http notranslate">X-API-KEY: <span class="bcls-input">your API KEY</span></code></td>
		</tr></tbody></table><h3>Sample request body</h3>

<pre class="line-numbers">
    <code class="language-json notranslate">{
      "application_ad_configuration": {
        "ad_configuration_description": "Human readable description of the configuration",
        "ad_configuration_expected_response_type": "<span class="bcls-input">Dfp, Vast or SmartXML</span>",
        "ad_configuration_headers": {
        "X-Custom-Header-Rand": "{{random.int32}}",
        "X-VIDEOPLAZA-FORWARDED-FOR": "{{client.ipaddress}}"
        },
        "ad_configuration_headers_for_impressions": false,
        "ad_configuration_strategy": "<span class="bcls-input">SingleAdResponse or MultipleAdResponse</span>",
        "ad_configuration_transforms": [
          {
          "xpath": "/",
          "xslt": "&lt;xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:Det=\"http://Det.com\"&gt;&lt;xsl:output omit-xml-declaration=\"yes\"/&gt;&lt;xsl:template match=\"node()|@*\"&gt;&lt;xsl:copy&gt;&lt;xsl:apply-templates select=\"node()|@*\"/&gt;&lt;/xsl:copy&gt;&lt;/xsl:template&gt;&lt;/xsl:stylesheet&gt;"
          }
        ],
        "ad_configuration_url_format": "https://ad-provider-host.com/path/to/ad-handler?ip={{client.ipaddress}}&amp;num={{random.int32}}&amp;ses={{session.session_id}}"
      },
      "application_description": "Human readable description of the ad application",
      "account_id": "<span class="bcls-input">User's Account ID [Optional]</span>"
    }</code></pre>

<aside class="bcls-aside bcls-aside--information">The <code>account_id </code> field is the Live Account ID. When omitted, the Account ID of the requesting user is used.</aside><h3>Sample response</h3>

<pre class="line-numbers">
    <code class="language-json notranslate">{
      "application": {
        "account_id": "User Account ID",
        "application_description": "Human readable description of the ad application",
        "application_ad_configuration": {
          "ad_configuration_description": "Human readable description of the configuration",
          "ad_configuration_expected_response_type": "<span class="bcls-highlight">Dfp | Vast | SmartXML</span>",
          "ad_configuration_headers": {
            "X-Custom-Header-Rand": "{{random.int32}}",
            "X-VIDEOPLAZA-FORWARDED-FOR": "{{client.ipaddress}}"
          },
          "ad_configuration_headers_for_impressions": false,
          "ad_configuration_strategy": "<span class="bcls-highlight">SingleAdResponse | MultipleAdResponse</span>",
          "ad_configuration_transforms": [
            {
              "xpath": "/",
              "xslt": "&lt;xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:Det=\"http://Det.com\"&gt;&lt;xsl:output omit-xml-declaration=\"yes\"/&gt;&lt;xsl:template match=\"node()|@*\"&gt;&lt;xsl:copy&gt;&lt;xsl:apply-templates select=\"node()|@*\"/&gt;&lt;/xsl:copy&gt;&lt;/xsl:template&gt;&lt;/xsl:stylesheet&gt;"
            }
          ],
          "ad_configuration_url_format": "https://ad-provider-host.com/path/to/ad-handler?ip={{client.ipaddress}}&amp;num={{random.int32}}&amp;ses={{session.session_id}}"
        },
        "application_id": <span class="bcls-highlight">"Application ID"</span>
      },
      "inserted": true
    }</code></pre>
</section><section class="bcls-section"><h2 id="Update_an_ad_configuration">Update an ad configuration</h2>

<p>Updating an ad configuration is very similar to creating one. Make a <code>PUT</code> request as follows:</p>

<table class="bcls-table"><tbody class="bcls-table__body"><tr><th>Method</th>
			<td style="width:80em;"><code class="language-http notranslate">PUT</code></td>
		</tr><tr><th>URL</th>
			<td><code class="language-http notranslate">https://api.bcovlive.io/v1/ssai/applications/application/<span class="bcls-input">Application_ID</span></code></td>
		</tr><tr><th>Header</th>
			<td><code class="language-http notranslate">X-API-KEY: <span class="bcls-input">your API KEY</span></code></td>
		</tr></tbody></table><h3>Sample request body</h3>

<pre class="line-numbers">
    <code class="language-json notranslate">{
      "application_ad_configuration": {
        "ad_configuration_description": "Some Updated Description Value",
        "ad_configuration_expected_response_type": "<span class="bcls-input">Dfp or Vast or SmartXML</span>,
        "ad_configuration_headers": {
          "X-Custom-Header-Rand": "{{random.int32}}",
          "X-VIDEOPLAZA-FORWARDED-FOR": "{{client.ipaddress}}"
        },
        "ad_configuration_headers_for_impressions": false,
        "ad_configuration_strategy": "<span class="bcls-input">SingleAdResponse or MultipleAdResponse</span>",
        "ad_configuration_transforms": [
          {
          "xpath": "/",
          "xslt": "&lt;xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:Det=\"http://Det.com\"&gt;&lt;xsl:output omit-xml-declaration=\"yes\"/&gt;&lt;xsl:template match=\"node()|@*\"&gt;&lt;xsl:copy&gt;&lt;xsl:apply-templates select=\"node()|@*\"/&gt;&lt;/xsl:copy&gt;&lt;/xsl:template&gt;&lt;/xsl:stylesheet&gt;"
          }
        ],
        "ad_configuration_url_format": "https://updated-ad-provider-host.com/path/to/ad-handler?ip={{client.ipaddress}}&amp;num={{random.int32}}&amp;ses={{session.session_id}}"
      },
      "application_description": "Human readable description of the ad application",
      "account_id": "<span class="bcls-input">User's Account ID [Optional]</span>"
    }</code></pre>

<aside class="bcls-aside bcls-aside--information">The <code>account_id </code> field is the Live Account ID. When omitted, the Account ID of the requesting user is used.</aside><h3>Sample response</h3>

<pre class="line-numbers">
    <code class="language-json notranslate">{
      "account_id": "User Account ID",
      "application_description": "Human readable description of the ad application",
      "application_ad_configuration": {
        "ad_configuration_description": "Some Updated Description Value",
        "ad_configuration_expected_response_type": "<span class="bcls-highlight">Dfp | Vast | SmartXML</span>",
        "ad_configuration_headers": {
        "X-Custom-Header-Rand": "{{random.int32}}",
        "X-VIDEOPLAZA-FORWARDED-FOR": "{{client.ipaddress}}"
        },
        "ad_configuration_headers_for_impressions": false,
        "ad_configuration_strategy": "<span class="bcls-highlight">SingleAdResponse | MultipleAdResponse</span>",
        "ad_configuration_transforms": [
          {
          "xpath": "/",
          "xslt": "&lt;xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:Det=\"http://Det.com\"&gt;&lt;xsl:output omit-xml-declaration=\"yes\"/&gt;&lt;xsl:template match=\"node()|@*\"&gt;&lt;xsl:copy&gt;&lt;xsl:apply-templates select=\"node()|@*\"/&gt;&lt;/xsl:copy&gt;&lt;/xsl:template&gt;&lt;/xsl:stylesheet&gt;"
          }
        ],
        "ad_configuration_url_format": "https://updated-ad-provider-host.com/path/to/ad-handler?ip={{client.ipaddress}}&amp;num={{random.int32}}&amp;ses={{session.session_id}}"
      },
      "application_id": <span class="bcls-highlight">"Application ID"</span>
    }</code></pre>
</section><section class="bcls-section"><h2 id="Get_all_ad_configurations">Get all ad configurations</h2>

<p>To retrieve all the ad configurations for an account, submit a <code>GET </code> request as follows:</p>

<table class="bcls-table"><tbody class="bcls-table__body"><tr><th>Method</th>
			<td style="width:80em;"><code class="language-http notranslate">GET</code></td>
		</tr><tr><th>URL</th>
			<td><code class="language-http notranslate">https://api.bcovlive.io/v1/ssai/applications/account/<span class="bcls-input">Account_ID</span></code></td>
		</tr><tr><th>Header</th>
			<td><code class="language-http notranslate">X-API-KEY: <span class="bcls-input">your API KEY</span></code></td>
		</tr></tbody></table><aside class="bcls-aside bcls-aside--information">The <code>Account_ID</code> here is the Live Account ID.</aside><h3>Sample response</h3>

<pre class="line-numbers">
    <code class="language-json notranslate">[
      {
        "application_id": "Application_ID_1",
        "application_description": "DFP Single Midroll",
        "application_ad_configuration": {
        "ad_configuration_description": "DFP Test Config Single Midroll",
        "ad_configuration_strategy": "MultipleAdResponse",
        "ad_configuration_transforms": [],
        "ad_configuration_url_format": "https://ad-provider-host.com/path/to/ad-handler",
        "ad_configuration_expected_response_type": "Dfp"
        },
        "account_id": "Account_ID"
      },
      {
        "application_id": "Application_ID_2",
        "application_description": "Test DFP Single Midroll"
        "application_ad_configuration": {
        "ad_configuration_description": "DFP Test Config Single Midroll",
        "ad_configuration_strategy": "MultipleAdResponse",
        "ad_configuration_transforms": [
        {
          "xslt": "&lt;xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:Det=\"http://Det.com\"&gt;&lt;xsl:output omit-xml-declaration=\"yes\"/&gt;&lt;xsl:template match=\"node()|@*\"&gt;&lt;xsl:copy&gt;&lt;xsl:apply-templates select=\"node()|@*\"/&gt;&lt;/xsl:copy&gt;&lt;/xsl:template&gt;&lt;/xsl:stylesheet&gt;",
          "xpath": "/"
        }
        ],
        "ad_configuration_url_format": "https://ad-provider-host.com/path/to/ad-handler?ip={{client.ipaddress}}&amp;num={{random.int32}}&amp;ses={{session.session_id}}",
        "ad_configuration_expected_response_type": "Dfp"
        },
        "account_id": "Account_ID"
      }
    ]</code></pre>
</section><section class="bcls-section"><h2 id="Get_an_ad_configuration">Get an ad configuration</h2>

<p>You can also retrieve a specific ad configuration by its <code>application_id </code> by sending a <code>GET</code> request as follows:</p>

<table class="bcls-table"><tbody class="bcls-table__body"><tr><th>Method</th>
			<td style="width:80em;"><code class="language-http notranslate">GET</code></td>
		</tr><tr><th>URL</th>
			<td><code class="language-http notranslate">https://api.bcovlive.io/v1/ssai/applications/application/<span class="bcls-input">Application_ID</span></code></td>
		</tr><tr><th>Header</th>
			<td><code class="language-http notranslate">X-API-KEY: <span class="bcls-input">your API KEY</span></code></td>
		</tr></tbody></table><h3>Sample response</h3>

<pre class="line-numbers">
    <code class="language-json notranslate">{
      "application_id": "Application_ID",
      "application_description": "Test DFP Single Midroll",
      "application_ad_configuration": {
        "ad_configuration_description": "DFP Test Config Single Midroll",
        "ad_configuration_strategy": "MultipleAdResponse",
        "ad_configuration_transforms": [
          {
          "xslt": "&lt;xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:Det=\"http://Det.com\"&gt;&lt;xsl:output omit-xml-declaration=\"yes\"/&gt;&lt;xsl:template match=\"node()|@*\"&gt;&lt;xsl:copy&gt;&lt;xsl:apply-templates select=\"node()|@*\"/&gt;&lt;/xsl:copy&gt;&lt;/xsl:template&gt;&lt;/xsl:stylesheet&gt;",
          "xpath": "/"
          }
        ],
        "ad_configuration_url_format": "https://ad-provider-host.com/path/to/ad-handler?ip={{client.ipaddress}}&amp;num={{random.int32}}&amp;ses={{session.session_id}}",
        "ad_configuration_expected_response_type": "Dfp"
      },
      "account_id": "Account_ID"
    }</code></pre>
</section><section class="bcls-section"><h2 id="Delete_an_ad_configuration">Delete an ad configuration</h2>

<p>To delete an ad configuration, send a <code>DELETE</code> request as follows:</p>

<table class="bcls-table"><tbody class="bcls-table__body"><tr><th>Method</th>
			<td style="width:80em;"><code class="language-http notranslate">DELETE</code></td>
		</tr><tr><th>URL</th>
			<td><code class="language-http notranslate">https://api.bcovlive.io/v1/ssai/applications/application/<span class="bcls-input">APPLICATION_ID</span></code></td>
		</tr><tr><th>Header</th>
			<td><code class="language-http notranslate">X-API-KEY: <span class="bcls-input">your API KEY</span></code></td>
		</tr></tbody></table><h3>Sample response</h3>

<pre class="line-numbers">
    <code class="language-json notranslate">{
    "application_id": "Application_ID",
    "deleted": true
    }</code></pre>
</section><section class="bcls-section"><h2 id="Managing_slates">Managing slates</h2>

<p>Slates are your own assets used to fill unused ad time. You can use slates to provide a "be right back" message or any content that you like.</p>

<p>Below are details for the API requests to add and manage slate assets.</p>

<h3>Add slate asset</h3>

<p>To ingest a new slate media source asset, submit a <code>POST</code> request:</p>

<table class="bcls-table"><tbody class="bcls-table__body"><tr><th>Method</th>
			<td style="width:80em;"><code class="language-http notranslate">POST</code></td>
		</tr><tr><th>URL</th>
			<td><code class="language-http notranslate">https://api.bcovlive.io/v1/ssai/slates</code></td>
		</tr><tr><th>Header</th>
			<td><code class="language-http notranslate">X-API-KEY: <span class="bcls-input">your API KEY</span></code></td>
		</tr></tbody></table><h4>Sample request body</h4>

<pre class="line-numbers">
    <code class="language-json notranslate">{
      "source_url": "https://somesourceasset.com/slate-to-ingest.mp4",
      "account_id": "<span class="bcls-input">Account_ID [Optional]</span>",
      "source_description": "<span class="bcls-input">User identifiable description for the slate  [Optional]</span>"
    }
    </code>
    </pre>

<aside class="bcls-aside bcls-aside--information">The <code>account_id </code> here is the Live Account ID. When omitted, Account ID of the requesting user is used.</aside><h4>Sample response</h4>

<pre class="line-numbers">
    <code class="language-json notranslate">{
      "media_source_asset_id": "New_UUID",
      "account_id": "Account_ID",
      "media_source_asset_default": false,
      "media_source_asset_type": "slate",
      "media_source_asset_url": "https://somesourceasset.com/slate-to-ingest.mp4",
      "media_source_asset_status": "transcoding"
      "media_source_asset_description": "User identifiable description for the slate"
    }</code></pre>

<aside class="bcls-aside bcls-aside--information">Note: that setting <code>media_source_asset_default</code> is <strong>not</strong> supported at this time.</aside><h3>Delete slate asset</h3>

<p>To delete a slate media source asset, send a <code>DELETE</code> request:</p>

<table class="bcls-table"><tbody class="bcls-table__body"><tr><th>Method</th>
			<td style="width:80em;"><code class="language-http notranslate">DELETE</code></td>
		</tr><tr><th>URL</th>
			<td><code class="language-http notranslate">https://api.bcovlive.io/v1/ssai/slates/slate/<span class="bcls-input">Slate_MSA_ID</span></code></td>
		</tr><tr><th>Header</th>
			<td><code class="language-http notranslate">X-API-KEY: <span class="bcls-input">your API KEY</span></code></td>
		</tr></tbody></table><h4>Sample response</h4>

<pre class="line-numbers">
    <code class="language-json notranslate">{
      "media_source_asset_id": "MSA_UUID",
      "media_source_asset_type": "slate",
      "media_source_asset_url": "http://someS3urlpath/media.mp4",
      "media_source_asset_default": false,
      "media_source_asset_status": "ready",
      "account_id": "ACCOUNT_ID"
    }</code></pre>

<h3>Get slate assets</h3>

<p>You can retrieve an array of all the slate media source assets for an account by sending a <code>GET</code> request:</p>

<table class="bcls-table"><tbody class="bcls-table__body"><tr><th>Method</th>
			<td style="width:80em;"><code class="language-http notranslate">GET</code></td>
		</tr><tr><th>URL</th>
			<td><code class="language-http notranslate">https://api.bcovlive.io/v1/ssai/slates/account/<span class="bcls-input">Account_ID</span></code></td>
		</tr><tr><th>Header</th>
			<td><code class="language-http notranslate">X-API-KEY: <span class="bcls-input">your API KEY</span></code></td>
		</tr></tbody></table><aside class="bcls-aside bcls-aside--information">The <code>Account_ID </code> here is the Live Account ID.</aside><h4>Sample response</h4>

<pre class="line-numbers">
    <code class="language-json notranslate">[
      {
      "media_source_asset_id": "MSA_UUID_1",
      "media_source_asset_type": "slate",
      "media_source_asset_default": false,
      "media_source_asset_url": "http://someS3urlpath.com/media.mp4",
      "account_id": "ACCOUNT_ID",
      "media_source_asset_status": "ready"
      },
      {
      "media_source_asset_id": "MSA_UUID_2",
      "media_source_asset_type": "slate",
      "media_source_asset_default": true,
      "media_source_asset_url": "http://someS3urlpath.com/media.mp4",
      "account_id": "ACCOUNT_ID",
      "media_source_asset_status": "ready"
      }
    ]</code></pre>
</section><section class="bcls-section"><h2 id="Notes_about_DFP">Notes about DFP</h2>

<p>If you are obtaining ads from DFP, here are some things to keep in mind to help prevent issues.</p>

<h3>Ad tag</h3>

<p>When you are creating an ad tag for Live, be sure you are following the proper guidelines and including <code>/live </code>. See the DFP document <a href="https://support.google.com/dfp_premium/answer/1068325?hl=en">Create a master video tag manually</a> for full details.</p>

<h3>Concurrency</h3>

<p>If you are expecting a high amount of concurrency we recommended that you talk to your DFP account team.</p>

<h3>Single/multiple ad responses</h3>

<p>The <code>singleadresponse </code> and <code>multiadresponse </code> parameters are not currently used by <span class="”notranslate”">SSAI</span>.</p>

<p>Live <span class="”notranslate”">SSAI</span> only makes a single ad server call and expects the response to contain all the ads for the break with the exception that it will follow any necessary ad wrappers with a limit of 5 redirects per ad. The following ad response formats are accepted and will be parsed as follows:</p>

<ul><li>VAST - Single response or a pod of ads in a single response</li>
	<li>DFP Ad Rules - Aggregates all available ads in the response including pre-, mid-, post-roll defined ads</li>
	<li>Smart XML - Aggregates all available ads in the response including pre-, mid-, post-roll defined ads</li>
</ul></section><section class="bcls-section"><h2 id="Custom_headers_for_ad_requests">Custom headers for ad requests</h2>

<p>The <span class="”notranslate”">SSAI</span> platform can pass custom headers with the Ad calls and all beacons used by the backend platform. Some ad servers such as VideoPlaza require custom headers.</p>

<p>Custom headers are specified as a set of key-value pairs in an <code>ad_configuration_headers</code> object, which is part of the <code>application_ad_configuration </code> (see the <a href="#Create_an_ad_configuration">Create an ad configuration</a> section).</p>

<h3>Notes</h3>

<ul><li>Standard headers are handled by default such as:
	<ul><li><code>X-Forwarded-For </code></li>
		<li><code>X-Device-User-Agent </code></li>
	</ul></li>
	<li>Header values can use the <a href="#Ad_configuration_variables">ad configuration variables</a></li>
	<li>Header values can also be static strings</li>
</ul><aside class="bcls-aside bcls-aside--warning">Headers will be passed to all downstream requests including ad wrappers or impressions/quartiles so you should use them with caution.</aside></section><section class="bcls-section"><h2 id="Targeting_ads_using_ad_macros">Targeting ads using ad macros</h2>

<p>When you <a href="#Create_an_ad_configuration">create an ad configuration</a>, your ad tag will typically look something like this:</p>

<pre>
      <code class="language-http">https://ad-provider-host.com/path/to/ad-handler?ip={{client.ipaddress}}&amp;
      num={{random.int32}}&amp;ses={{session.session_id}}&amp;IDFA={{deviceid}}&amp;
      sitesection={{sitesection}}&amp;breakid={{breakid}}&amp;breaktheme={{breaktheme}}</code></pre>

<p>The items inside the double curly braces are variables, also called ad macros, which Brightcove Live will replace with values, if they exist, when it sends the ad request.</p>

<aside class="bcls-aside bcls-aside--information">The variables that will be useful depend on the ad server.</aside><p>Ad macro values can be supplied in following ways:</p>

<ul><li><a href="#Using_header_information">Using header information</a></li>
	<li><a href="#Appending_the_URL">Appending the URL</a></li>
	<li><a href="#Adding_URLs_dynamically">Adding URLs dynamically</a></li>
	<li><a href="#Using_manual_cue_points">Using manual cue points</a></li>
</ul><h3 id="Using_header_information">Using header information</h3>

<p>Header information, detailed in the <a href="#Ad_configuration_variables">Ad configuration variables</a> section above, is available for any request. Simply specify the variables you want with the appropriate key names in your ad configuration.</p>

<h3 id="Appending_the_URL">Appending the URL</h3>

<p>Additional session values can be appended to the URL for the live stream, like this:</p>

<pre>
      <code class="language-http">http://playback.bcovlive.io/e058d9f2737e18/us-west-2/NA/
      playlist.m3u8<span class="bcls-highlight">?deviceid=123456&amp;sitesection=services</span>"</code></pre>

<h3 id="Adding_URLs_dynamically">Adding URLs dynamically</h3>

<p>You can add URLs dynamically, using Javascript and the Brightcove Player API:</p>

<pre class="line-numbers">
      <code class="language-html">&lt;!DOCTYPE html&gt;
      &lt;body&gt;
        &lt;video
        id="myPlayerID"
        data-video-id="5975635167001"
        data-account="3737230870001"
        data-player="tIG7lVKBm"
        data-embed="default"
        data-application-id
        class="video-js"
        controls
        width="640"
        height="360"&gt;&lt;/video&gt;
        &lt;script src="//players.brightcove.net/3737230870001/tIG7lVKBm_default/index.min.js"&gt;&lt;/script&gt;

        &lt;script type="text/javascript"&gt;
        var player = videojs("myPlayerID");

        player.one("loadstart", function(){
          var sourceUrl = player.currentSource();
          console.log(sourceUrl);
          var liveUrlWithParams = sourceUrl.src + "?player_width={width}&amp;player_height={height}&amp;deviceid={deviceid}";

          player.src([{
            "type": "application/vnd.apple.mpegurl",
            "src": liveUrlWithParams
          }]);
        });
      &lt;/script&gt;

      &lt;/body&gt;</code></pre>

<p>Note that the key names in this example correspond to the variable names in the ad tag shown above.</p>
</section><section class="bcls-section"><h2 id="Ad_configuration_variables">Ad configuration variables</h2>

<p>Ad configuration variables, also known as beacons, can be used in requests to manage ad configurations. For details, see the <a href="live-api-cue-points-and-ad-beacons-ssai.html#Beacons">Live API: Cue Points and Ad Beacons with SSAI</a> document.</p>
</section><section class="bcls-section"><h2 id="Using_manual_cue_points">Using manual cue points</h2>

<p>Values for specific ad breaks can be sent with the manual cue point insertion request. For details, see the <a href="live-api-cue-points-and-ad-beacons-ssai.html#Manual_cue_point_insertion">Live API: Cue Points and Ad Beacons</a> document.</p>
</section><section class="bcls-section"><h2 id="Known_issues">Known issues</h2>

<ul><li>SSAI requires that the live streaming video have an audio track.</li>
	<li>If the VAST returned has the same ad ID, then the server will not request the ad content, even though the ad URL uses dynamic variables to make it a unique URL. This does <strong>not</strong> apply if you are using DFP for ads.</li>
	<li>With DFP, while you can use the same ad ID, there still needs to be a different creative ID - in other words, you can't do a simple swap of the MediaFile.</li>
	<li>
	<p>If an ad break has a duration less than the MAX duration of the ad URL (min_ad_duration=0&amp;max_ad_duration=30000), if ad is returned longer than the ad break, the ad will not be played.</p>
	</li>
	<li>
	<p>VPAID or clickable ads are not supported for <span class="”notranslate”">Brightcove Live SSAI</span>.</p>
	</li>
	<li>
	<p>When an ad break has remaining time shorter than the segment seconds of the stream and a slate is displayed, the slate is displayed for its segment duration and the actual ad break will be longer than expected.</p>
	</li>
	<li>The first time the ad is seen by our system, it will not play until it is transcoded and ready to deliver.</li>
	<li>VMAP for Live SSAI is not currently supported.</li>
</ul></section></article></div>
      
</div>

</div>


<section class="views-element-container block block-views block-views-blockrelated-content-by-field-block-1 clearfix" id="block-views-block-related-content-by-field-block-1">
  
    

      <div class="form-group"><div class="view view-related-content-by-field view-id-related_content_by_field view-display-id-block_1 js-view-dom-id-641171f7b4e0c795df0011f5a0e8f1f04fe956cc6a246248b5ac6a8be05bf374">
  
    
      <div class="view-header">
      <h2>Related content</h2>
    </div>
      
      <div class="view-content">
      <div class="item-list">
  
  <ul>

          <li><div class="views-field views-field-title"><span class="field-content"><span class="content-type-support_doc"><a href="live-api-cue-points-and-ad-beacons-ssai.html" hreflang="en">Live API: Cue Points and Ad Beacons with SSAI</a></span></span></div></li>
          <li><div class="views-field views-field-title"><span class="field-content"><span class="content-type-support_doc"><a href="overview-brightcove-live-api.html" hreflang="en">Overview: Brightcove Live API</a></span></span></div></li>
          <li><div class="views-field views-field-title"><span class="field-content"><span class="content-type-support_doc"><a href="live-api-creating-vod-clips.html" hreflang="en">Live API: Creating VOD Clips</a></span></span></div></li>
          <li><div class="views-field views-field-title"><span class="field-content"><span class="content-type-support_doc"><a href="quick-start-create-live-stream-using-brightcove-live-api.html" hreflang="en">Quick Start: Create a Live Stream Using the Brightcove Live API</a></span></span></div></li>
          <li><div class="views-field views-field-title"><span class="field-content"><span class="content-type-support_doc"><a href="live-api-notifications.html" hreflang="en">Live API: Notifications</a></span></span></div></li>
    
  </ul>

</div>

    </div>
  
          </div>
</div>

  </section>


  </div>

              </section>

                </div>
  </div>

      
  
  </div>

    
    <script type="application/json" data-drupal-selector="drupal-settings-json">{"path":{"baseUrl":"\/","scriptPath":null,"pathPrefix":"","currentPath":"node\/17763","currentPathIsAdmin":false,"isFront":false,"currentLanguage":"en"},"pluralDelimiter":"\u0003","google_analytics":{"trackOutbound":true,"trackMailto":true,"trackDownload":true,"trackDownloadExtensions":"7z|aac|arc|arj|asf|asx|avi|bin|csv|doc(x|m)?|dot(x|m)?|exe|flv|gif|gz|gzip|hqx|jar|jpe?g|js|mp(2|3|4|e?g)|mov(ie)?|msi|msp|pdf|phps|png|ppt(x|m)?|pot(x|m)?|pps(x|m)?|ppam|sld(x|m)?|thmx|qtm?|ra(m|r)?|sea|sit|tar|tgz|torrent|txt|wav|wma|wmv|wpd|xls(x|m|b)?|xlt(x|m)|xlam|xml|z|zip"},"bootstrap":{"forms_has_error_value_toggle":1,"modal_animation":1,"modal_backdrop":"true","modal_focus_input":1,"modal_keyboard":1,"modal_select_text":1,"modal_show":1,"modal_size":"","popover_enabled":1,"popover_animation":1,"popover_auto_close":1,"popover_container":"body","popover_content":"","popover_delay":"0","popover_html":0,"popover_placement":"right","popover_selector":"","popover_title":"","popover_trigger":"click"},"ajaxTrustedUrl":{"form_action_p_pvdeGsVG5zNF_XLGPTvYSKCf43t8qZYSwcfZl2uzM":true},"user":{"uid":0,"permissionsHash":"3b7fdb4927baca3ee2939edeb777485b3e2c2d36cf8c80e0d8f49c6dc5e2eeca"}}</script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@3.4.1/dist/js/bootstrap.min.js" integrity="sha256-nuL8/2cJ5NDSSwnKD8VqreErSWHtnEP9E7AySL+1ev4=" crossorigin="anonymous"></script>

  <script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","licenseKey":"e78a80aa93","applicationID":"129613202","transactionName":"YwBUZkcFVktUWhJQX1pKd1FBDVdWGn0UTEBVCWpxWhZdZHNWFFRscgpEX3cRUVRRXBQUDkYAWFZQFmhUVFoDUV9YAVNAcwtKVXRaElBfWg==","queueTime":0,"applicationTime":153,"atts":"T0dXEA8fRUU=","errorBeacon":"bam.nr-data.net","agent":""}</script></body>
</html>
