<!DOCTYPE html>
<html  lang="en" dir="ltr">
  <head>
    <meta charset="utf-8" />
<script>(function(i,s,o,g,r,a,m){i["GoogleAnalyticsObject"]=r;i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)})(window,document,"script","https://www.google-analytics.com/analytics.js","ga");ga("create", "UA-2728311-17", {"cookieDomain":"auto"});ga("set", "anonymizeIp", true);ga("send", "pageview");</script>
<meta name="Generator" content="Drupal 8 (https://www.drupal.org)" />
<meta name="MobileOptimized" content="width" />
<meta name="HandheldFriendly" content="true" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<link rel="shortcut icon" href="sites/default/files/favicon-64.png" type="image/png" />
<link rel="alternate" hreflang="en" href="brightcove-player-sample-playback-rate-adjuster.html" />
<link rel="canonical" href="brightcove-player-sample-playback-rate-adjuster.html" />
<link rel="shortlink" href="brightcove-player-sample-playback-rate-adjuster.html" />
<link rel="revision" href="brightcove-player-sample-playback-rate-adjuster.html" />

    <title>Brightcove Player Sample: Playback Rate Adjuster | Brightcove Learning</title>
    <link rel="stylesheet" media="all" href="sites/default/files/css/css_d7PoQ20hWbRiei75VgExP_tm8C1ylIRfzB3zIYLc5Cw_q23msc.css" />
<link rel="stylesheet" media="all" href="https://cdn.jsdelivr.net/npm/bootstrap@3.4.1/dist/css/bootstrap.min.css" />
<link rel="stylesheet" media="all" href="https://cdn.jsdelivr.net/npm/@unicorn-fail/drupal-bootstrap-styles@0.0.2/dist/3.4.0/8.x-3.x/drupal-bootstrap.min.css" />


    
<!--[if lte IE 8]>
<script src="/sites/default/files/js/js_VtafjXmRvoUgAzqzYTA3Wrjkx9wcWhjP0G4ZnnqRamA.js"></script>
<![endif]-->

    <meta name="uri-translation" content="on" />
    <script>
window['_fs_debug'] = false; window['_fs_host'] = 'fullstory.com';
window['_fs_org'] = 'BX3Q1';
window['_fs_namespace'] = 'FS';
(function(m,n,e,t,l,o,g,y){
if (e in m) {if(m.console && m.console.log) { m.console.log('FullStory namespace conflict. Please set window["_fs_namespace"].');} return;}
g=m[e]=function(a,b){g.q?g.q.push([a,b]):g._api(a,b);};g.q=[];
o=n.createElement(t);o.async=1;o.src='https://'+_fs_host+'/s/fs.js';
y=n.getElementsByTagName(t)[0];y.parentNode.insertBefore(o,y);
g.identify=function(i,v){g(l,{uid:i});if(v)g(l,v)};g.setUserVars=function(v){g(l,v)};
g.shutdown=function(){g("rec",!1)};g.restart=function(){g("rec",!0)};
g.consent=function(a){g("consent",!arguments.length||a)};
g.identifyAccount=function(i,v){o='account';v=v||{};v.acctId=i;g(o,v)};
g.clearUserCookie=function(){};
})(window,document,window['_fs_namespace'],'script','user');
    </script>
  </head>
  <body class="path-node page-node-type-support-doc has-glyphicons">


<section id="block-gtranslate" class="block block-gtranslate block-gtranslate-block clearfix">
  
    

      



  </section>


  </div>

      </div>
      

                    <div class="navbar-collapse collapse">
            <div class="region region-navigation-collapsible">
    

  </div>

        </div>
          </header>
  
    <div class="full-width-headline">
    <div class="container">
      <div class="row">
        <div class="col-sm-12" role="heading">
            <div class="region region-header">
          <section id="block-brightcoveheadlineblock" class="block block-bc-general block-bc-general-headline-block clearfix">
  
    

      Documentation
  </section>


  </div>

        </div>
      </div>
    </div>
  </div>
  
      <div role="main" class="main-container container  js-quickedit-main-content">
    <div class="row">

                              <aside class="col-sm-3" role="complementary">
              <div class="region region-sidebar-first">
    <section class="bc-search-fixes-search-block-form block block-bc-search-fixes block-bc-search-fixes-search-block clearfix" data-drupal-selector="bc-search-fixes-search-block-form" id="block-brightcovesearchblock">
  
    

      <form action="brightcove-player-sample-playback-rate-adjuster.html" method="post" id="bc-search-fixes-search-block-form" accept-charset="UTF-8">
  <div class="form-item js-form-item form-type-textfield js-form-type-textfield form-item-search js-form-item-search form-no-label form-group">
      <label for="edit-search" class="control-label sr-only">Search</label>
  
  
  <input data-drupal-selector="edit-search" class="form-text form-control" type="text" id="edit-search" name="search" value="" size="15" maxlength="128" placeholder="Search" />

  
  
  </div>
<input autocomplete="off" data-drupal-selector="form-jhkzpzmuserdfff-vwewb2sdfnlbqd6joamhpywj0wc" type="hidden" name="form_build_id" value="form-jHkZpZmUSERDFFf_vWewb2SdFnlBqd6joAMhPyWJ0Wc" /><input data-drupal-selector="edit-bc-search-fixes-search-block-form" type="hidden" name="form_id" value="bc_search_fixes_search_block_form" /><div data-drupal-selector="edit-actions" class="form-actions form-group js-form-wrapper form-wrapper" id="edit-actions"><button data-drupal-selector="edit-submit" class="button js-form-submit form-submit btn-primary btn icon-only" type="submit" id="edit-submit" name="op" value="Search"><span class="sr-only">Search</span><span class="icon glyphicon glyphicon-search" aria-hidden="true"></span></button></div>

</form>

  </section>

<section id="block-inpagenavigationblock" class="hidden-xs block block-bc-ipnav block-bc-ipnav-block clearfix">
  
      <h2 class="block-title">On This Page</h2>
    

      <div class="bc-ipnav-block"></div>
  </section>


  </div>

          </aside>
              
                  <section class="col-sm-9">

                                      <div class="highlighted">  <div class="region region-highlighted">
    <div data-drupal-messages-fallback class="hidden"></div>

  </div>
</div>
                  
                
                
                
                          <a id="main-content"></a>
            <div class="region region-content">
        <h1 class="page-header"><span>Brightcove Player Sample: Playback Rate Adjuster</span>
</h1>

  
<div class="node node--type-support-doc node--view-mode-full bcdocs-four-rows clearfix">

  

  <div class="group-first-row">
      </div>

  <div class="group-second-row">
  
  <div class="field field--name-field-products field--type-entity-reference field--label-visually_hidden">
    <div class="field--label sr-only">Product(s)</div>
          <div class="field__items taxonomy__tags">
        <svg class="icon--product" viewBox="0 0 100 100">
          <use xlink:href="//support.brightcove.com/themes/custom/bcdocs/images/icons.svg#icon--product"></use>
        </svg>
              <div class="field--item">Video Cloud</div>
          <div class="field--item">Brightcove Player</div>
              </div>
      </div>

  <div class="field field--name-field-roles field--type-entity-reference field--label-visually_hidden">
    <div class="field--label sr-only">Role(s)</div>
          <div class="field__items taxonomy__tags">
        <svg class="icon--roles" viewBox="0 0 100 100">
          <use xlink:href="//support.brightcove.com/themes/custom/bcdocs/images/icons.svg#icon--roles"></use>
        </svg>
              <div class="field--item">Player Developer</div>
              </div>
      </div>

</div>

  
<div class="group-third-row taxonomy__tags">
      <svg class="icon--label" viewBox="0 0 100 100">
      <use xlink:href="//support.brightcove.com/themes/custom/bcdocs/images/icons.svg#icon--label"></use>
    </svg>
    
  <div class="field field--name-field-topics field--type-entity-reference field--label-visually_hidden">
    <div class="field--label sr-only">Topic(s)</div>
          <div class="field--items">
              <div class="field--item">Code Samples</div>
          <div class="field--item">Playback</div>
              </div>
      </div>

  <div class="field field--name-field-type field--type-entity-reference field--label-visually_hidden">
    <div class="field--label sr-only">Type</div>
              <div class="field--item">Support Doc</div>
          </div>

</div>

  <div class="group-fourth-row">
  
            <div class="field field--name-field-support-doc-body field--type-text-with-summary field--label-hidden field--item"><p>In this topic, you will learn how to add a playback rate button to the Brightcove Player control bar, and use middleware to properly display the current time and video duration as you switch between playback speeds.</p><article class="bcls-article">
<section class="bcls-section">
<h2 id="Player_example">Player example</h2>
<!-- UPDATE description -->

<aside class="bcls-aside bcls-aside--information language-editable">This sample and associated code is provided as a guide for your production development. The code is not certified for production use nor officially supported.</aside>

<p>Start video playback and select the playback rate button in the control bar (default is 1x). Choose a different rate to see how video playback speed changes. Notice that when you change the playback rate, the duration time displayed is re-calculated based on the selected rate.</p>
<!-- <aside class="bcls-aside bcls-aside--tip">If you don't want to code the middleware functions, you can use a plug and play solution. For details, see the  <a href="#Code_in_a_separate_JavaScript_file">Code in a separate JavaScript file</a> section.</aside> --><!-- UPDATE codepen here -->

<p data-height="490" data-theme-id="34967" data-slug-hash="aGEVYZ" data-default-tab="result" data-user="bcls1969" data-embed-version="2" data-pen-title="Playback Rate Adjuster" class="codepen">See the Pen <a href="https://codepen.io/team/bcls1969/pen/aGEVYZ/">Playback Rate Adjuster</a> by Brightcove Learning Services (<a href="https://codepen.io/bcls1969">@bcls1969</a>) on <a href="https://codepen.io">CodePen</a>.</p>
<script async src="https://static.codepen.io/assets/embed/ei.js"></script><!-- UPDATE link to GitHub source -->

<p>View the <a href="https://github.com/BrightcoveLearning/18597-playback-rate-adjuster">source code</a>.</p>
</section>

<section class="bcls-section">
<h2 id="Using_the_CodePen" class="bcls-expander-head">Using the CodePen</h2>

<div class="bcls-expander-content">
<p>Here are some tips to effectively use the above CodePen:</p>

<ul>
	<li>Toggle the actual display of the player by clicking the <strong class="notranslate">Result</strong> button.</li>
	<li>Click the <strong class="notranslate">HTML/CSS/JS</strong> buttons to display ONE of the code types.</li>
	<li>Later in this document the logic, flow and styling used in the application will be discussed in the <a href="#Player/HTML_configuration">Player/HTML configuration</a>, <a href="#Applicaton_flow">Application flow</a> and <a href="#Application_styling">Application styling</a> sections. The best way to follow along with the information in those sections is to:
	<ol>
		<li>Click the <strong class="notranslate">EDIT ON CODEPEN</strong> button in the CodePen and have the code available in one browser/browser tab.</li>
		<li>In CodePen, adjust what code you want displayed. You can change the width of different code sections within CodePen.</li>
		<li>View the <a href="#Player/HTML_configuration">Player/HTML configuration</a>, <a href="#Applicaton_flow">Application flow</a> and/or <a href="#Application_styling">Application styling</a> sections in another browser/browser tab. You will now be able to follow the code explanations and at the same time view the code.</li>
	</ol>
	</li>
</ul>
</div>
</section>

<section class="bcls-section">
<h2 id="Development_sequence" class="bcls-expander-head">Development sequence</h2>

<div class="bcls-expander-content">
<p>Here is the recommended development sequence:</p>

<ol>
	<li>Use the In-Page embed player implementation to test the functionality of your player, plugin and CSS (if CSS is needed)</li>
	<li>Put the plugin's JavaScript and CSS into separate files for local testing</li>
	<li>Deploy the plugin code and CSS to your server once you have worked out any errors</li>
	<li>Use Studio to add the plugin and CSS to your player</li>
	<li>Replace the In-Page embed player implementation if you determine that the iframe implementation is a better fit (detailed in next section)</li>
</ol>

<p>For details about these steps, review the <a href="step-step-plugin-development.html">Step-by-Step: Plugin Development</a> guide.</p>

<h3>iframe or In-Page embed</h3>

<p>When developing enhancements for the Brightcove player you will need to decide if the code is a best fit for the iframe or In-Page embed implementation. The best practice recommendation is to build a plugin for use with an iframe implementation. The advantages of using the iframe player are:</p>

<ul>
	<li>No collisions with existing JavaScript and/or CSS</li>
	<li>Automatically responsive</li>
	<li>The iframe eases use in social media apps (or whenever the video will need to "travel" into other apps)</li>
</ul>

<p>Although integrating the In-Page embed player can be more complex, there are times when you will plan your code around that implementation. To generalize, this approach is best when the containing page needs to communicate to the player. Specifically, here are some examples:</p>

<ul>
	<li>Code in the containing page needs to listen for and act on player events</li>
	<li>The player uses styles from the containing page</li>
	<li>The iframe will cause app logic to fail, like a redirect from the containing page</li>
</ul>

<p>Even if your final implementation does not use the iframe code, you can still use the In-Page embed code with a plugin for your JavaScript and a separate file for your CSS. This encapsulates your logic so that you can easily use it in multiple players.</p>
</div>
<!-- id="expanderContent" --></section>

<section class="bcls-section">
<h2 id="Middleware_functions">Middleware functions</h2>

<p>This sample uses Video.js middleware to implement the code solution. At a very high level, the use cases where middleware is of most value is when you want to intercept and alter core behaviors of the player, such as setting the source or current time. Video.js middleware in general is not discussed at length in this document, but the actual code used for the middleware function is explained. Here are documents from Video.js sources that do detail middleware:</p>

<ul>
	<li><a href="http://docs.videojs.com/tutorial-middleware.html">Middleware (from the Video.js documentation set)</a></li>
	<li><a href="http://blog.videojs.com/feature-spotlight-middleware/">Feature Spotlight: Middleware (from the Video.js blog)</a></li>
	<li><a href="https://github.com/videojs/videojs-playbackrate-adjuster">videojs-playbackrate-adjuster (a sample app)</a></li>
</ul>

<h3>Implementing middleware functions with Brightcove Player</h3>

<p>The simplest way to use a middleware function is to:</p>

<ol class="bcls-tasklist__restart">
	<li>Write the middleware function.</li>
	<li>Place the middleware function either on the page with the player in a <code>script</code> tag, or include the middleware function using the <code>src</code> attribute with a <code>script</code> tag. Both implementations will be shown in this document.</li>
	<li>Register the middleware function with the player using the <code>use()</code> method, as shown here:
	<pre class="line-numbers">
<code class="language-javascript">videojs.use('mimeType', functionName);</code></pre>

	<p>For the <strong>mimetype</strong> you can use a standard video mimetype, like <strong>video/mp4</strong>, or use an <strong>*</strong> if you wish the middleware function to act on all mimetypes.</p>

	<aside class="bcls-aside bcls-aside--tip">Plugins and middleware may be set up to automatically register themselves when their scripts are included. In this case, you would not need to use the <code>videojs.use()</code> method.</aside>
	</li>
</ol>
</section>

<section class="bcls-section">
<h2 id="API/Plugin_resources_used">API/Plugin resources used</h2>
<!-- UPDATE table, remove unneeded columns -->

<table class="bcls-table">
	<thead class="bcls-table__head">
		<tr>
			<th>API Classes</th>
			<th>API Methods</th>
		</tr>
	</thead>
	<tbody class="bcls-table__body">
		<tr>
			<td><a href="https://docs.brightcove.com/brightcove-player/current-release/ControlBar.html">ControlBar</a></td>
			<td><a href="https://docs.brightcove.com/brightcove-player/current-release/ControlBar.html#addChild">controlBar.addChild()</a></td>
		</tr>
		<tr>
			<td><a href="https://docs.brightcove.com/brightcove-player/current-release/PlaybackRateMenuButton.html">PlaybackRateMenuButton</a></td>
			<td>&nbsp;</td>
		</tr>
	</tbody>
</table>
</section>
<!-- UPDATE player and HTML configuration -->

<section class="bcls-section">
<h2 id="Player/HTML_configuration">Player/HTML configuration</h2>

<p>This section details any special configuration needed during player creation. In addition, other HTML elements that must be added to the page, beyond the in-page embed player implementation code, are described.</p>

<h3>Player configuration</h3>

<p>No special configuration is required for the Brightcove Player you create for this sample.</p>

<h3>Other HTML</h3>

<p>Remember to add the <code>id</code> attribute to the <code>video</code> tag in the player embed code.</p>

<pre>
<code class="language-html">&lt;video-js <span class="bcls-highlight">id="myPlayerID"</span>
...</code></pre>
</section>
<!-- UPDATE application flow -->

<section class="bcls-section">
<h2 id="Application_flow">Application flow</h2>

<p>The basic logic behind this application is:</p>

<ul>
	<li>Define the middleware functions</li>
	<li>Register the middleware with the player</li>
	<li>Define the playback rate options</li>
	<li>Initialize the playback rate button</li>
</ul>
<!-- UPDATE task 1 -->

<h3>Define the middleware functions</h3>

<p>Find the code which is labeled:</p>

<pre>
<code class="language-javascript">// +++ Define the middleware functions +++</code></pre>

<p>Create the following middleware functions:</p>

<ol class="bcls-tasklist__restart">
	<li>Create a supporting middleware function that will re-calculate the playback start and end times based on the selected playback rate.</li>
	<li>
	<p>Create a middleware function that will update the start time, duration and even current time when seeking.</p>

	<p>The basic syntax for creating a middleware function is as follows:</p>

	<pre class="line-numbers">
<code class="language-javascript">const playbackrateAdjuster = function(player) {
   return {
   ...
 };</code></pre>

	<p>Note that the <code>player</code> object is passed to the function.</p>

	<p>This middleware function does the following:</p>

	<ol>
		<li><strong>Listen for the ratechange event</strong>: When the playback rate is changed, then trigger the <code>durationchange</code> and <code>timeupdate</code> events.</li>
		<br />
		<li><strong>Implement the setSource() method</strong>: This is a required method for every middleware function. By using the syntax shown means the middleware will always be selected, irregardless of the video type:
		<pre>
<code class="language-javascript">setSource(srcObj, next) {
  next(null, srcObj);
},</code></pre>
		</li>
		<br />
		<li><strong>Override methods using current playback rate</strong>: Override the methods for <code>duration</code>, <code>currentTime</code>, <code>buffered</code>, <code>seekable</code> and <code>played</code> with values calculated using the current playback rate.</li>
	</ol>
	</li>
</ol>
<!-- UPDATE task 5 -->

<h3>Register the middleware with the player</h3>

<p>Find the code which is labeled:</p>

<pre>
<code class="language-javascript">// +++ Register the middleware with the player +++</code></pre>

<p>Register the middleware function with the player using the <code>use()</code> method.</p>
<!-- UPDATE task 6 -->

<h3>Define the playback rate options</h3>

<p>Find the code which is labeled:</p>

<pre>
<code class="language-javascript">// +++ Define the playback rate options +++</code></pre>

<p>Define the playback rates that you want displayed in the playback rate menu button.</p>
<!-- UPDATE task 7 -->

<h3>Initialize the playback rate button</h3>

<p>Find the code which is labeled:</p>

<pre>
<code class="language-javascript">// +++ Initialize the playback rate button +++</code></pre>

<p>Add the playback rate menu button to the player control bar, and initialize it with the values specified in the options object.</p>
</section>
<!-- UPDATE CSS description -->

<section class="bcls-section">
<h2 id="Application_styling">Application styling</h2>

<p>There are no additional styles for this sample.</p>
</section>

<section class="bcls-section">
<h2 id="Using_the_middleware_function">Using the middleware function</h2>

<p>Once the middleware function has been written you want to use it. Two ways were mentioned earlier, and will be detailed now.</p>

<h3>Code on same page as player</h3>

<p>This is where you define the middleware function on the same page as the player, and then register it. The <a href="#Player_example">player example</a> in the Codepen above uses this method.</p>

<h3 id="Code_in_a_separate_JavaScript_file">Code in a separate JavaScript file</h3>

<p>In the following code, the JavaScript for the middleware functions and the <code>use()</code> method to register it are simply included in the page.</p>

<pre class="line-numbers">
<code class="language-html">&lt;video-js id="myPlayerID"
	  data-video-id="5604123528001"
	  data-account="1752604059001"
	  data-player="default"
	  data-embed="default"
	  data-application-id
	  class="video-js"
	  width="640" height="360"
	  controls muted&gt;&lt;/video&gt;
	&lt;script src="https://players.brightcove.net/1752604059001/default_default/index.min.js"&gt;&lt;/script&gt;

  &lt;!-- Include the rate adjuster middleware functions --&gt;
  &lt;script src="rate-adjuster.js"&gt;&lt;/script&gt;

  &lt;script type="text/javascript"&gt;
  	videojs.getPlayer("myPlayerID").ready(function(){
  		// When the player is ready, get a reference to it
  		var myPlayer = this;
  		console.log("myPlayer",myPlayer)
  		// Define the playback rate options
  		options = {"playbackRates":[0.5, 1, 1.5, 2, 4]};
  		// Initialize the playback rate button
  		myPlayer.controlBar.playbackRateMenuButton = myPlayer.controlBar.addChild('PlaybackRateMenuButton', {
      	playbackRates: options.playbackRates
  	  });
    });
  &lt;/script&gt;</code></pre>

<p>This example assumes that you will host the JavaScript file on your own server. For the complete code, see the <a href="https://github.com/BrightcoveLearning/18597-playback-rate-adjuster/tree/master/plugin">plugin section</a> in the GitHub repo.</p>

<aside class="bcls-aside bcls-aside--tip">
<p>The <strong>videojs-playbackrate-adjuster</strong> middleware is published to <strong>npm</strong> and available to include in your project: <a href="https://unpkg.com/videojs-playbackrate-adjuster@1.0.0/dist/browser/videojs-playbackrate-adjuster.min.js">//unpkg.com/videojs-playbackrate-adjuster@1.0.0/dist/browser/videojs-playbackrate-adjuster.min.js</a></p>

<p>Note that the <strong>unpkg.com</strong> site is free and open source. It does not guarantee uptime and infrastructure support.</p>
</aside>
</section>
</article>
</div>
      
</div>

</div>


<section class="views-element-container block block-views block-views-blockrelated-content-by-field-block-1 clearfix" id="block-views-block-related-content-by-field-block-1">
  
    

      <div class="form-group"><div class="view view-related-content-by-field view-id-related_content_by_field view-display-id-block_1 js-view-dom-id-e24db264558d0c84a0f2c553212aabaac9ee7cb20db7aee17ab78951c0db2316">
  
    
      <div class="view-header">
      <h2>Related content</h2>
    </div>
      
      <div class="view-content">
      <div class="item-list">
  
  <ul>

          <li><div class="views-field views-field-title"><span class="field-content"><span class="content-type-support_doc"><a href="brightcove-player-sample-disable-forward-scrubbing.html" hreflang="en">Brightcove Player Sample: Disable Forward Scrubbing</a></span></span></div></li>
          <li><div class="views-field views-field-title"><span class="field-content"><span class="content-type-support_doc"><a href="brightcove-player-sample-get-seeked-time.html" hreflang="en">Brightcove Player Sample: Get Seeked Time</a></span></span></div></li>
    
  </ul>

</div>

    </div>
  
          </div>
</div>

  </section>


  </div>

              </section>

                </div>
  </div>

      
  
  </div>

    
    <script type="application/json" data-drupal-selector="drupal-settings-json">{"path":{"baseUrl":"\/","scriptPath":null,"pathPrefix":"","currentPath":"node\/18597","currentPathIsAdmin":false,"isFront":false,"currentLanguage":"en"},"pluralDelimiter":"\u0003","google_analytics":{"trackOutbound":true,"trackMailto":true,"trackDownload":true,"trackDownloadExtensions":"7z|aac|arc|arj|asf|asx|avi|bin|csv|doc(x|m)?|dot(x|m)?|exe|flv|gif|gz|gzip|hqx|jar|jpe?g|js|mp(2|3|4|e?g)|mov(ie)?|msi|msp|pdf|phps|png|ppt(x|m)?|pot(x|m)?|pps(x|m)?|ppam|sld(x|m)?|thmx|qtm?|ra(m|r)?|sea|sit|tar|tgz|torrent|txt|wav|wma|wmv|wpd|xls(x|m|b)?|xlt(x|m)|xlam|xml|z|zip"},"bootstrap":{"forms_has_error_value_toggle":1,"modal_animation":1,"modal_backdrop":"true","modal_focus_input":1,"modal_keyboard":1,"modal_select_text":1,"modal_show":1,"modal_size":"","popover_enabled":1,"popover_animation":1,"popover_auto_close":1,"popover_container":"body","popover_content":"","popover_delay":"0","popover_html":0,"popover_placement":"right","popover_selector":"","popover_title":"","popover_trigger":"click"},"ajaxTrustedUrl":{"form_action_p_pvdeGsVG5zNF_XLGPTvYSKCf43t8qZYSwcfZl2uzM":true},"user":{"uid":0,"permissionsHash":"3b7fdb4927baca3ee2939edeb777485b3e2c2d36cf8c80e0d8f49c6dc5e2eeca"}}</script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@3.4.1/dist/js/bootstrap.min.js" integrity="sha256-nuL8/2cJ5NDSSwnKD8VqreErSWHtnEP9E7AySL+1ev4=" crossorigin="anonymous"></script>

  <script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","licenseKey":"e78a80aa93","applicationID":"129613202","transactionName":"YwBUZkcFVktUWhJQX1pKd1FBDVdWGn0UTEBVCWpxWhZdZHNWFFRscgpEX3cRUVRRXBQUDkYAWFZQFmhUVFoDUV9YAVNAcwtKVXRaElBfWg==","queueTime":0,"applicationTime":206,"atts":"T0dXEA8fRUU=","errorBeacon":"bam.nr-data.net","agent":""}</script></body>
</html>
