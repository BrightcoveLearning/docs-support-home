<!DOCTYPE html>
<html  lang="en" dir="ltr">
  <head>
    <meta charset="utf-8" />
<script>(function(i,s,o,g,r,a,m){i["GoogleAnalyticsObject"]=r;i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)})(window,document,"script","https://www.google-analytics.com/analytics.js","ga");ga("create", "UA-2728311-17", {"cookieDomain":"auto"});ga("set", "anonymizeIp", true);ga("send", "pageview");</script>
<meta name="Generator" content="Drupal 8 (https://www.drupal.org)" />
<meta name="MobileOptimized" content="width" />
<meta name="HandheldFriendly" content="true" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<link rel="shortcut icon" href="sites/default/files/favicon-64.png" type="image/png" />
<link rel="alternate" hreflang="en" href="quick-start-using-rtmp-outputs-live-events.html" />
<link rel="canonical" href="quick-start-using-rtmp-outputs-live-events.html" />
<link rel="shortlink" href="quick-start-using-rtmp-outputs-live-events.html" />
<link rel="revision" href="quick-start-using-rtmp-outputs-live-events.html" />

    <title>Quick Start: Using RTMP Outputs for Live Events | Brightcove Learning</title>
    <link rel="stylesheet" media="all" href="sites/default/files/css/css_d7PoQ20hWbRiei75VgExP_tm8C1ylIRfzB3zIYLc5Cw_q23msc.css" />
<link rel="stylesheet" media="all" href="https://cdn.jsdelivr.net/npm/bootstrap@3.4.1/dist/css/bootstrap.min.css" />
<link rel="stylesheet" media="all" href="https://cdn.jsdelivr.net/npm/@unicorn-fail/drupal-bootstrap-styles@0.0.2/dist/3.4.0/8.x-3.x/drupal-bootstrap.min.css" />


    
<!--[if lte IE 8]>
<script src="/sites/default/files/js/js_VtafjXmRvoUgAzqzYTA3Wrjkx9wcWhjP0G4ZnnqRamA.js"></script>
<![endif]-->

    <meta name="uri-translation" content="on" />
    <script>
window['_fs_debug'] = false; window['_fs_host'] = 'fullstory.com';
window['_fs_org'] = 'BX3Q1';
window['_fs_namespace'] = 'FS';
(function(m,n,e,t,l,o,g,y){
if (e in m) {if(m.console && m.console.log) { m.console.log('FullStory namespace conflict. Please set window["_fs_namespace"].');} return;}
g=m[e]=function(a,b){g.q?g.q.push([a,b]):g._api(a,b);};g.q=[];
o=n.createElement(t);o.async=1;o.src='https://'+_fs_host+'/s/fs.js';
y=n.getElementsByTagName(t)[0];y.parentNode.insertBefore(o,y);
g.identify=function(i,v){g(l,{uid:i});if(v)g(l,v)};g.setUserVars=function(v){g(l,v)};
g.shutdown=function(){g("rec",!1)};g.restart=function(){g("rec",!0)};
g.consent=function(a){g("consent",!arguments.length||a)};
g.identifyAccount=function(i,v){o='account';v=v||{};v.acctId=i;g(o,v)};
g.clearUserCookie=function(){};
})(window,document,window['_fs_namespace'],'script','user');
    </script>
  </head>
  <body class="path-node page-node-type-support-doc has-glyphicons">


<section id="block-gtranslate" class="block block-gtranslate block-gtranslate-block clearfix">
  
    

      



  </section>


  </div>

      </div>
      

                    <div class="navbar-collapse collapse">
            <div class="region region-navigation-collapsible">
    

  </div>

        </div>
          </header>
  
    <div class="full-width-headline">
    <div class="container">
      <div class="row">
        <div class="col-sm-12" role="heading">
            <div class="region region-header">
          <section id="block-brightcoveheadlineblock" class="block block-bc-general block-bc-general-headline-block clearfix">
  
    

      Documentation
  </section>


  </div>

        </div>
      </div>
    </div>
  </div>
  
      <div role="main" class="main-container container  js-quickedit-main-content">
    <div class="row">

                              <aside class="col-sm-3" role="complementary">
              <div class="region region-sidebar-first">
    <section class="bc-search-fixes-search-block-form block block-bc-search-fixes block-bc-search-fixes-search-block clearfix" data-drupal-selector="bc-search-fixes-search-block-form" id="block-brightcovesearchblock">
  
    

      <form action="quick-start-using-rtmp-outputs-live-events.html" method="post" id="bc-search-fixes-search-block-form" accept-charset="UTF-8">
  <div class="form-item js-form-item form-type-textfield js-form-type-textfield form-item-search js-form-item-search form-no-label form-group">
      <label for="edit-search" class="control-label sr-only">Search</label>
  
  
  <input data-drupal-selector="edit-search" class="form-text form-control" type="text" id="edit-search" name="search" value="" size="15" maxlength="128" placeholder="Search" />

  
  
  </div>
<input autocomplete="off" data-drupal-selector="form-tmwl7by7t7xjcel-73rfug2i6o0encymfts0ygkjmno" type="hidden" name="form_build_id" value="form-tMwL7bY7t7xJCEL-73rFug2I6O0enCYmFts0yGKJMNo" /><input data-drupal-selector="edit-bc-search-fixes-search-block-form" type="hidden" name="form_id" value="bc_search_fixes_search_block_form" /><div data-drupal-selector="edit-actions" class="form-actions form-group js-form-wrapper form-wrapper" id="edit-actions"><button data-drupal-selector="edit-submit" class="button js-form-submit form-submit btn-primary btn icon-only" type="submit" id="edit-submit" name="op" value="Search"><span class="sr-only">Search</span><span class="icon glyphicon glyphicon-search" aria-hidden="true"></span></button></div>

</form>

  </section>

<section id="block-inpagenavigationblock" class="hidden-xs block block-bc-ipnav block-bc-ipnav-block clearfix">
  
      <h2 class="block-title">On This Page</h2>
    

      <div class="bc-ipnav-block"></div>
  </section>


  </div>

          </aside>
              
                  <section class="col-sm-9">

                                      <div class="highlighted">  <div class="region region-highlighted">
    <div data-drupal-messages-fallback class="hidden"></div>

  </div>
</div>
                  
                
                
                
                          <a id="main-content"></a>
            <div class="region region-content">
        <h1 class="page-header"><span>Quick Start: Using RTMP Outputs for Live Events</span>
</h1>

  
<div class="node node--type-support-doc node--view-mode-full bcdocs-four-rows clearfix">

  

  <div class="group-first-row">
      </div>

  <div class="group-second-row">
  
  <div class="field field--name-field-products field--type-entity-reference field--label-visually_hidden">
    <div class="field--label sr-only">Product(s)</div>
          <div class="field__items taxonomy__tags">
        <svg class="icon--product" viewBox="0 0 100 100">
          <use xlink:href="//support.brightcove.com/themes/custom/bcdocs/images/icons.svg#icon--product"></use>
        </svg>
              <div class="field--item">Video Cloud</div>
          <div class="field--item">Live</div>
              </div>
      </div>

  <div class="field field--name-field-roles field--type-entity-reference field--label-visually_hidden">
    <div class="field--label sr-only">Role(s)</div>
          <div class="field__items taxonomy__tags">
        <svg class="icon--roles" viewBox="0 0 100 100">
          <use xlink:href="//support.brightcove.com/themes/custom/bcdocs/images/icons.svg#icon--roles"></use>
        </svg>
              <div class="field--item">API Developer</div>
              </div>
      </div>

</div>

  
<div class="group-third-row taxonomy__tags">
      <svg class="icon--label" viewBox="0 0 100 100">
      <use xlink:href="//support.brightcove.com/themes/custom/bcdocs/images/icons.svg#icon--label"></use>
    </svg>
    
  <div class="field field--name-field-topics field--type-entity-reference field--label-visually_hidden">
    <div class="field--label sr-only">Topic(s)</div>
          <div class="field--items">
              <div class="field--item">Live Streaming</div>
              </div>
      </div>

  <div class="field field--name-field-apis field--type-entity-reference field--label-visually_hidden">
    <div class="field--label sr-only">API(s)</div>
          <div class="field--items">
              <div class="field--item">Live API</div>
              </div>
      </div>

</div>

  <div class="group-fourth-row">
  
            <div class="field field--name-field-support-doc-body field--type-text-with-summary field--label-hidden field--item"><p>This tutorial will walk you through creating RTMP outputs to set up live events on YouTube Live and Facebook Live.</p><article class="bcls-article"><section class="bcls-section"><h2 id="Overview">Overview</h2>

<figure class="bcls-figure"><img alt="general-block-diagram" title="Block diagram" src="https://learning-services-media.brightcove.com/doc-assets/node/18697-quick-start-using-rtmp-outputs-live-events/block-diagram-small.png" /><figcaption class="bcls-caption--image">Block Diagram</figcaption></figure><p>This tutorial explains at the API level how to create a live streaming job in <a href="live.html">Brightcove live</a> and then create <a href="https://en.wikipedia.org/wiki/Real-Time_Messaging_Protocol">RTMP</a> outputs and re-stream them to YouTube Live and Facebook Live.</p>

<aside class="BCL-bcls-aside bcls-aside--information language-editable">Notes:
<ul><li>For information on how to use RTMP outputs in the Live module, see <a href="using-live-rtmp-outputs-stream-facebook-and-youtube.html">Using Live RTMP Outputs to Stream to Facebook and YouTube</a>.</li>
	<li>RTMP Outputs <strong>does</strong> support <code>rtmps</code> urls - you should use <code>rtmps</code> if the social platform supports it.</li>
	<li>Note that Facebook ended support for <code>rtmp</code>.streams as of 1 May 2019, for for Facebook, you <strong>MUST</strong> use <code>RTMPS</code>.</li>
</ul></aside><p>This tutorial will use <a class="notranslate" href="concepts-set-curl.html">curl</a> to make the API requests, but you can easily make them in <a class="notranslate" href="use-insomnia-api-requests.html">Insomnia</a>, <a class="notranslate" href="use-postman-api-requests.html">Postman</a> or other REST clients instead.</p>
</section><section class="bcls-section"><h2 id="create_a_live_job">Create a live job</h2>

<p>First, we will create a live job. You will need an <code>API-KEY</code> for the Live API. If you do not, and are interested in obtaining access, please contact your account manager.</p>

<ol class="bcls-tasklist"><li>
	<p>Copy and paste the following <span class="notranslate">curl</span> command into a text editor:</p>

	<pre class="line-numbers">
<code class="language-bash">curl -X POST \
  https://api.bcovlive.io/v1/jobs \
  -H 'Content-Type: application/json' \
  -H 'x-api-key: {{bcov-live-api-key}}' \
  -d '{
    "live_stream": true,
    "region": "{{closest-region-encoder}}",
    "outputs": [{
      "label": "hls360p",
      "live_stream": true,
      "height": 360,
      "video_bitrate": 365,
      "segment_seconds": 6,
      "keyframe_interval": 60
    },
    {
      "label": "hls432p",
      "live_stream": true,
      "height": 432,
      "video_bitrate": 730,
      "segment_seconds": 6,
      "keyframe_interval": 60
    },
    {
      "label": "hls540p",
      "live_stream": true,
      "height": 540,
      "video_bitrate": 2000,
      "segment_seconds": 6,
      "keyframe_interval": 60
    },
    {
      "label": "hls720p3M",
      "live_stream": true,
      "height": 540,
      "video_bitrate": 2000,
      "segment_seconds": 6,
      "keyframe_interval": 60
    },
    {
      "label": "hls720p4.5M",
      "live_stream": true,
      "height": 540,
      "video_bitrate": 4500,
      "segment_seconds": 6,
      "keyframe_interval": 60
    }]
  }'
</code></pre>
	</li>
	<li>
	<p><strong>Replace:</strong></p>

	<ul><li><code>{{closest-region-encoder}}</code> with the closest available region to your encoder, see <a href="overview-brightcove-live-api.html#Support_aws_regions">closest available regions</a> to your encoder. For instance: <code>us-west-2</code></li>
		<li><code>{{bcov-live-api-key}}</code> with your Brightcove live API key. For example: <code>abcdfeg-this-is-a-fake-api-key-FgJajjasd12hJHsZ</code></li>
	</ul></li>
	<li>After making those changes, copy and paste the code into Terminal or whatever command-line app you use and run it.</li>
	<li>
	<p>The response should be something like this:</p>

	<pre class="line-numbers">
<code class="language-json">{
    "id": "3b6871bf2f344acaa6b397d09b476018",
    "outputs": [... removed for simplicity ...],
    "stream_url": "rtmp://ep1-usw2.bcovlive.io:1935/3b6871bf2f344acaa6b397d09b476018",
    "stream_name": "alive",
    "static": false,
    "encryption": {},
    "playback_url": "https://bcovlive-a.akamaihd.net/3b6871bf2f344acaa6b397d09b476018/us-west-2/NA/playlist.m3u8",
    "playback_url_dvr": "https://bcovlive-a.akamaihd.net/3b6871bf2f344acaa6b397d09b476018/us-west-2/NA/playlist_dvr.m3u8"
}</code></pre>
	</li>
</ol><p>This jobs will create 5 renditions <strong>based</strong> on <a href="https://developer.apple.com/documentation/http_live_streaming/hls_authoring_specification_for_apple_devices">Apple recommendations</a>.</p>
</section><section class="bcls-section"><h2 id="Configure_your_encoder">Configure your encoder</h2>

<p>The steps shown here will assume an <a href="https://www.elemental.com/products/aws-elemental-live">Elemental live box</a> encoder, which was used in testing the steps for this tutorial. If you have a different encoder, the settings should be similar.</p>

<p>The most important settings for this case are:</p>

<ul><li>Configure timecode source as "system clock"</li>
	<li>Set "OnFi timecode frequency" to 1</li>
	<li>Check "time code insertion" inside video</li>
	<li>Strongly recommended: Framerate = follow source</li>
</ul><p>This is the config we used for this experiment:</p>

<figure class="bcls-figure"><img alt="elemental-live-job-config" title="Elemental live config" src="https://learning-services-media.brightcove.com/doc-assets/node/18697-quick-start-using-rtmp-outputs-live-events/elemental-live-job-config-v1-small.png" /><figcaption class="bcls-caption--image">Elemental live config</figcaption></figure></section><section class="bcls-section"><h2 id="test_playback">Test playback</h2>

<p>You can use this <a href="https://videojs.github.io/videojs-contrib-hls/">VideoJS HLS demo page</a> to test playback, just paste the value <code>playback_url</code> returned in the creation job response:</p>

<figure class="bcls-figure"><img alt="videojs-hls-playback" title="VideoJS HLS playback demo page" src="https://learning-services-media.brightcove.com/doc-assets/node/18697-quick-start-using-rtmp-outputs-live-events/videojs-hls-playback-small.png" /><figcaption class="bcls-caption--image">VideoJS HLS playback demo page</figcaption></figure></section><section class="bcls-section"><h2 id="Youtube_live">Add the live stream to YouTube live</h2>

<p>We are assuming here that you have a YouTube account enabled for live streaming.</p>

<ol class="bcls-tasklist"><li>
	<p>Click <strong>go live</strong>, and you should see:</p>

	<figure class="bcls-figure"><img alt="youtube-go-live" title="YouTube go live" src="https://learning-services-media.brightcove.com/doc-assets/node/18697-quick-start-using-rtmp-outputs-live-events/youtube-go-live-small.png" /><figcaption class="bcls-caption--image">YouTube go live</figcaption></figure></li>
	<li>
	<p>Click on "Encoder live streaming":</p>

	<figure class="bcls-figure"><img alt="youtube-encoder-live" title="YouTube encoder live source" src="https://learning-services-media.brightcove.com/doc-assets/node/18697-quick-start-using-rtmp-outputs-live-events/youtube-encoder-live-small.png" /><figcaption class="bcls-caption--image">YouTube encoder live source</figcaption></figure></li>
	<li>
	<p>Configure your live event YouTube metadata and use the "Encoder set up" data to connect the Brightcove live stream to YouTube:</p>

	<figure class="bcls-figure"><img alt="youtube-encoder-setup" title="YouTube encoder setup" src="https://learning-services-media.brightcove.com/doc-assets/node/18697-quick-start-using-rtmp-outputs-live-events/youtube-encoder-setup-small.png" /><figcaption class="bcls-caption--image">YouTube encoder setup</figcaption></figure></li>
	<li>
	<p>Now that we have YouTube live set up, we will create the RTMP output for it from our Live job.</p>
	</li>
	<li>
	<p>Copy the <span class="notranslate">curl</span> command below into a text editor:</p>

	<pre class="line-numbers">
<code class="language-bash">curl -X POST \
  https://api.bcovlive.io/v1/jobs/{{bcov-live-job-id}}/rtmpouts \
  -H 'Content-Type: application/json' \
  -H 'x-api-key: {{bcov-live-api-key}}' \
  -d '{
  "url": "rtmp://a.rtmp.youtube.com/live2/{{youtube-secret-stream-name}}"
}'</code></pre>
	</li>
	<li>
	<p><strong>Replace:</strong></p>

	<ul><li><code>{{bcov-live-job-id}}</code> with your Brightcove live job id. In our example this value would be <code>3b6871bf2f344acaa6b397d09b476018</code> - your value, from the response to your request to create the live job , will be different.</li>
		<li><code>{{bcov-live-api-key}}</code> for your Brightcove live API key. For instance: <code>abcdfeg-this-is-a-fake-api-key-FgJajjasd12hJHsZ</code></li>
		<li><code>{{youtube-secret-stream-name}}</code> for the stream name / key that YouTube provides</li>
	</ul></li>
	<li>Paste the edited code into your command-line app and run it.</li>
	<li>
	<p>The response should be something like this:</p>

	<pre class="line-numbers">
<code class="language-json">{
          "connection_info": {
            "host": "a.rtmp.youtube.com",
            "port": 1935,
            "application": "live2",
            "streamName": "{{youtube-secret-stream-name}}"
          },
          "duration_history": [],
          "rtmp_out_id": "27aacdfa5bcf4436ade0519e6a748aba",
          "stream_start": 1542902218238
        }</code></pre>
	</li>
	<li>
	<p>To test YouTube playback you can go to YouTube <strong>my channel</strong>:</p>

	<figure class="bcls-figure"><img alt="youtube-my-channel-playback" title="YouTube my channel playback" src="https://learning-services-media.brightcove.com/doc-assets/node/18697-quick-start-using-rtmp-outputs-live-events/youtube-my-channel-playback-small.png" /><figcaption class="bcls-caption--image">YouTube my channel playback</figcaption></figure></li>
</ol></section><section class="bcls-section"><h2 id="facebook_live">Add the live stream to Facebook live</h2>

<p>We are assuming here that you have a Facebook account enabled for live streaming.</p>

<ol class="bcls-tasklist"><li>
	<p>Click <strong>Live video</strong></p>
	</li>
	<li>
	<p>Click <strong>connect</strong> and stream key to get the data needed to connect your Brightcove live job:</p>

	<figure class="bcls-figure"><img alt="facebook-live-config" title="Facebook live config" src="https://learning-services-media.brightcove.com/doc-assets/node/18697-quick-start-using-rtmp-outputs-live-events/facebook-live-config-small.png" /><figcaption class="bcls-caption--image">Facebook live config</figcaption></figure></li>
	<li>
	<p>Next, create live output for Brightcove live job using "server url" and "stream key" from Facebook. Copy the <span class="notranslate">curl</span> command below and paste it into a text editor:</p>

	<pre class="line-numbers">
<code class="language-bash">curl -X POST \
  https://api.bcovlive.io/v1/jobs/{{bcov-live-job-id}}/rtmpouts \
  -H 'Content-Type: application/json' \
  -H 'x-api-key: {{bcov-live-api-key}}' \
  -d '{
  "url": "rtmp://live-api-s.facebook.com:80/rtmp/{{facebook-secret-stream-name}}"
}'</code></pre>
	</li>
	<li>
	<p><strong>Replace:</strong></p>

	<ul><li><code>{{bcov-live-job-id}}</code> with your Brightcove live job id. In our example this value would be <code>3b6871bf2f344acaa6b397d09b476018</code> - your value, from the response to your request to create the live job , will be different.</li>
		<li><code>{{bcov-live-api-key}}</code> with your Brightcove live API key. For instance: <code>abcdfeg-this-is-a-fake-api-key-FgJajjasd12hJHsZ</code></li>
		<li><code>{{facebook-secret-stream-name}}</code> with you stream name that Facebook gives you</li>
	</ul></li>
	<li>
	<p>The response should be something like this:</p>

	<pre class="line-numbers">
<code class="language-json">{
  "connection_info": {
      "host": "live-api-s.facebook.com",
      "port": 80,
      "application": "rtmp",
      "streamName": "{{facebook-secret-stream-name}}"
  },
  "duration_history": [],
  "rtmp_out_id": "59323c3d1e2b44748755853193fb126c",
  "stream_start": 1542904101097
}</code></pre>
	</li>
	<li>
	<p>To test your Facebook Live stream, click "Go Live" on your Facebook webpage.</p>
	<img alt="facebook-playback" title="Facebook playback" src="https://learning-services-media.brightcove.com/doc-assets/node/18697-quick-start-using-rtmp-outputs-live-events/facebook-playback-small.png" /></li>
</ol></section></article></div>
      
</div>

</div>


<section class="views-element-container block block-views block-views-blockrelated-content-by-field-block-1 clearfix" id="block-views-block-related-content-by-field-block-1">
  
    

      <div class="form-group"><div class="view view-related-content-by-field view-id-related_content_by_field view-display-id-block_1 js-view-dom-id-ebe5af36cabdd324f795f8a775d46952a8ae9ef2b56f43e1ebe82abe3c6bdaf5">
  
    
      <div class="view-header">
      <h2>Related content</h2>
    </div>
      
      <div class="view-content">
      <div class="item-list">
  
  <ul>

          <li><div class="views-field views-field-title"><span class="field-content"><span class="content-type-support_doc"><a href="live-api-rtmp-outputs.html" hreflang="en">Live API: RTMP Outputs</a></span></span></div></li>
          <li><div class="views-field views-field-title"><span class="field-content"><span class="content-type-support_doc"><a href="overview-brightcove-live-api.html" hreflang="en">Overview: Brightcove Live API</a></span></span></div></li>
          <li><div class="views-field views-field-title"><span class="field-content"><span class="content-type-support_doc"><a href="quick-start-create-live-stream-using-brightcove-live-api.html" hreflang="en">Quick Start: Create a Live Stream Using the Brightcove Live API</a></span></span></div></li>
          <li><div class="views-field views-field-title"><span class="field-content"><span class="content-type-support_doc"><a href="using-live-rtmp-outputs-stream-facebook-and-youtube.html" hreflang="en">Using Live RTMP Outputs to Stream to Facebook and YouTube</a></span></span></div></li>
    
  </ul>

</div>

    </div>
  
          </div>
</div>

  </section>


  </div>

              </section>

                </div>
  </div>

      
  
  </div>

    
    <script type="application/json" data-drupal-selector="drupal-settings-json">{"path":{"baseUrl":"\/","scriptPath":null,"pathPrefix":"","currentPath":"node\/18697","currentPathIsAdmin":false,"isFront":false,"currentLanguage":"en"},"pluralDelimiter":"\u0003","google_analytics":{"trackOutbound":true,"trackMailto":true,"trackDownload":true,"trackDownloadExtensions":"7z|aac|arc|arj|asf|asx|avi|bin|csv|doc(x|m)?|dot(x|m)?|exe|flv|gif|gz|gzip|hqx|jar|jpe?g|js|mp(2|3|4|e?g)|mov(ie)?|msi|msp|pdf|phps|png|ppt(x|m)?|pot(x|m)?|pps(x|m)?|ppam|sld(x|m)?|thmx|qtm?|ra(m|r)?|sea|sit|tar|tgz|torrent|txt|wav|wma|wmv|wpd|xls(x|m|b)?|xlt(x|m)|xlam|xml|z|zip"},"bootstrap":{"forms_has_error_value_toggle":1,"modal_animation":1,"modal_backdrop":"true","modal_focus_input":1,"modal_keyboard":1,"modal_select_text":1,"modal_show":1,"modal_size":"","popover_enabled":1,"popover_animation":1,"popover_auto_close":1,"popover_container":"body","popover_content":"","popover_delay":"0","popover_html":0,"popover_placement":"right","popover_selector":"","popover_title":"","popover_trigger":"click"},"ajaxTrustedUrl":{"form_action_p_pvdeGsVG5zNF_XLGPTvYSKCf43t8qZYSwcfZl2uzM":true},"user":{"uid":0,"permissionsHash":"3b7fdb4927baca3ee2939edeb777485b3e2c2d36cf8c80e0d8f49c6dc5e2eeca"}}</script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@3.4.1/dist/js/bootstrap.min.js" integrity="sha256-nuL8/2cJ5NDSSwnKD8VqreErSWHtnEP9E7AySL+1ev4=" crossorigin="anonymous"></script>

  <script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","licenseKey":"e78a80aa93","applicationID":"129613202","transactionName":"YwBUZkcFVktUWhJQX1pKd1FBDVdWGkkHXlVrBldRXQE=","queueTime":0,"applicationTime":18,"atts":"T0dXEA8fRUU=","errorBeacon":"bam.nr-data.net","agent":""}</script></body>
</html>
