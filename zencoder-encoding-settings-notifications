<!DOCTYPE html>
<html  lang="en" dir="ltr">
  <head>
    <meta charset="utf-8" />
<script>(function(i,s,o,g,r,a,m){i["GoogleAnalyticsObject"]=r;i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)})(window,document,"script","https://www.google-analytics.com/analytics.js","ga");ga("create", "UA-2728311-17", {"cookieDomain":"auto"});ga("set", "anonymizeIp", true);ga("send", "pageview");</script>
<meta name="Generator" content="Drupal 8 (https://www.drupal.org)" />
<meta name="MobileOptimized" content="width" />
<meta name="HandheldFriendly" content="true" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<link rel="shortcut icon" href="sites/default/files/favicon-64.png" type="image/png" />
<link rel="alternate" hreflang="en" href="zencoder-encoding-settings-notifications.html" />
<link rel="canonical" href="zencoder-encoding-settings-notifications.html" />
<link rel="shortlink" href="zencoder-encoding-settings-notifications.html" />
<link rel="revision" href="zencoder-encoding-settings-notifications.html" />

    <title>Zencoder Encoding Settings: Notifications | Brightcove Learning</title>
    <link rel="stylesheet" media="all" href="sites/default/files/css/css_d7PoQ20hWbRiei75VgExP_tm8C1ylIRfzB3zIYLc5Cw_q23msc.css" />
<link rel="stylesheet" media="all" href="https://cdn.jsdelivr.net/npm/bootstrap@3.4.1/dist/css/bootstrap.min.css" />
<link rel="stylesheet" media="all" href="https://cdn.jsdelivr.net/npm/@unicorn-fail/drupal-bootstrap-styles@0.0.2/dist/3.4.0/8.x-3.x/drupal-bootstrap.min.css" />


    
<!--[if lte IE 8]>
<script src="/sites/default/files/js/js_VtafjXmRvoUgAzqzYTA3Wrjkx9wcWhjP0G4ZnnqRamA.js"></script>
<![endif]-->

    <meta name="uri-translation" content="on" />
    <script>
window['_fs_debug'] = false; window['_fs_host'] = 'fullstory.com';
window['_fs_org'] = 'BX3Q1';
window['_fs_namespace'] = 'FS';
(function(m,n,e,t,l,o,g,y){
if (e in m) {if(m.console && m.console.log) { m.console.log('FullStory namespace conflict. Please set window["_fs_namespace"].');} return;}
g=m[e]=function(a,b){g.q?g.q.push([a,b]):g._api(a,b);};g.q=[];
o=n.createElement(t);o.async=1;o.src='https://'+_fs_host+'/s/fs.js';
y=n.getElementsByTagName(t)[0];y.parentNode.insertBefore(o,y);
g.identify=function(i,v){g(l,{uid:i});if(v)g(l,v)};g.setUserVars=function(v){g(l,v)};
g.shutdown=function(){g("rec",!1)};g.restart=function(){g("rec",!0)};
g.consent=function(a){g("consent",!arguments.length||a)};
g.identifyAccount=function(i,v){o='account';v=v||{};v.acctId=i;g(o,v)};
g.clearUserCookie=function(){};
})(window,document,window['_fs_namespace'],'script','user');
    </script>
  </head>
  <body class="path-node page-node-type-support-doc has-glyphicons">


<section id="block-gtranslate" class="block block-gtranslate block-gtranslate-block clearfix">
  
    

      



  </section>


  </div>

      </div>
      

                    <div class="navbar-collapse collapse">
            <div class="region region-navigation-collapsible">
    

  </div>

        </div>
          </header>
  
    <div class="full-width-headline">
    <div class="container">
      <div class="row">
        <div class="col-sm-12" role="heading">
            <div class="region region-header">
          <section id="block-brightcoveheadlineblock" class="block block-bc-general block-bc-general-headline-block clearfix">
  
    

      Documentation
  </section>


  </div>

        </div>
      </div>
    </div>
  </div>
  
      <div role="main" class="main-container container  js-quickedit-main-content">
    <div class="row">

                              <aside class="col-sm-3" role="complementary">
              <div class="region region-sidebar-first">
    <section class="bc-search-fixes-search-block-form block block-bc-search-fixes block-bc-search-fixes-search-block clearfix" data-drupal-selector="bc-search-fixes-search-block-form" id="block-brightcovesearchblock">
  
    

      <form action="zencoder-encoding-settings-notifications.html" method="post" id="bc-search-fixes-search-block-form" accept-charset="UTF-8">
  <div class="form-item js-form-item form-type-textfield js-form-type-textfield form-item-search js-form-item-search form-no-label form-group">
      <label for="edit-search" class="control-label sr-only">Search</label>
  
  
  <input data-drupal-selector="edit-search" class="form-text form-control" type="text" id="edit-search" name="search" value="" size="15" maxlength="128" placeholder="Search" />

  
  
  </div>
<input autocomplete="off" data-drupal-selector="form-jhkzpzmuserdfff-vwewb2sdfnlbqd6joamhpywj0wc" type="hidden" name="form_build_id" value="form-jHkZpZmUSERDFFf_vWewb2SdFnlBqd6joAMhPyWJ0Wc" /><input data-drupal-selector="edit-bc-search-fixes-search-block-form" type="hidden" name="form_id" value="bc_search_fixes_search_block_form" /><div data-drupal-selector="edit-actions" class="form-actions form-group js-form-wrapper form-wrapper" id="edit-actions"><button data-drupal-selector="edit-submit" class="button js-form-submit form-submit btn-primary btn icon-only" type="submit" id="edit-submit" name="op" value="Search"><span class="sr-only">Search</span><span class="icon glyphicon glyphicon-search" aria-hidden="true"></span></button></div>

</form>

  </section>

<section id="block-inpagenavigationblock" class="hidden-xs block block-bc-ipnav block-bc-ipnav-block clearfix">
  
      <h2 class="block-title">On This Page</h2>
    

      <div class="bc-ipnav-block"></div>
  </section>


  </div>

          </aside>
              
                  <section class="col-sm-9">

                                      <div class="highlighted">  <div class="region region-highlighted">
    <div data-drupal-messages-fallback class="hidden"></div>

  </div>
</div>
                  
                
                
                
                          <a id="main-content"></a>
            <div class="region region-content">
        <h1 class="page-header"><span>Zencoder Encoding Settings: Notifications</span>
</h1>

  
<div class="node node--type-support-doc node--view-mode-full bcdocs-four-rows clearfix">

  

  <div class="group-first-row">
      </div>

  <div class="group-second-row">
  
  <div class="field field--name-field-products field--type-entity-reference field--label-visually_hidden">
    <div class="field--label sr-only">Product(s)</div>
          <div class="field__items taxonomy__tags">
        <svg class="icon--product" viewBox="0 0 100 100">
          <use xlink:href="//support.brightcove.com/themes/custom/bcdocs/images/icons.svg#icon--product"></use>
        </svg>
              <div class="field--item">Zencoder</div>
              </div>
      </div>

  <div class="field field--name-field-roles field--type-entity-reference field--label-visually_hidden">
    <div class="field--label sr-only">Role(s)</div>
          <div class="field__items taxonomy__tags">
        <svg class="icon--roles" viewBox="0 0 100 100">
          <use xlink:href="//support.brightcove.com/themes/custom/bcdocs/images/icons.svg#icon--roles"></use>
        </svg>
              <div class="field--item">API Developer</div>
              </div>
      </div>

</div>

  
<div class="group-third-row taxonomy__tags">
      <svg class="icon--label" viewBox="0 0 100 100">
      <use xlink:href="//support.brightcove.com/themes/custom/bcdocs/images/icons.svg#icon--label"></use>
    </svg>
    
  <div class="field field--name-field-topics field--type-entity-reference field--label-visually_hidden">
    <div class="field--label sr-only">Topic(s)</div>
          <div class="field--items">
              <div class="field--item">Encoding Settings</div>
          <div class="field--item">Notifications</div>
              </div>
      </div>

  <div class="field field--name-field-apis field--type-entity-reference field--label-visually_hidden">
    <div class="field--label sr-only">API(s)</div>
          <div class="field--items">
              <div class="field--item">Zencoder API</div>
              </div>
      </div>

</div>

  <div class="group-fourth-row">
  
            <div class="field field--name-field-support-doc-body field--type-text-with-summary field--label-hidden field--item"><p>This topic contains details for encoding settings related to notifications.</p>
                <article class="bcls-article"><section class="bcls-section"><aside class="bcls-aside bcls-aside--warning language-editable"><strong>Zencoder documentation has moved to provide you a more focused site. The new location is <a href="https://zencoder.support.brightcove.com">https://zencoder.support.brightcove.com</a>. Please use the new site and update your bookmarks! These old docs will be removed soon.</strong></aside><h2 id="Overview">Overview</h2>

<p>After a job or an output file is completed, you can find out about it in several ways.</p>

<ul><li>We can send a <a href="zencoder-getting-notifications-when-videos-are-finished.html">HTTP POST request</a> to your application with the details.</li>
	<li>We can send an email.</li>
	<li>You can request your notifications using a third-party tool such as <a href="https://ngrok.com">ngrok</a>. This is useful when you are developing locally and Zencoder canâ€™t reach your development server.</li>
	<li>You can check the Zencoder Dashboard for job status.</li>
	<li>You can check job status via a Job show API request.</li>
</ul><p>The first two - outgoing <a href="zencoder-getting-notifications-when-videos-are-finished.html">HTTP</a> or email notifications - are triggered by adding notification options to your Job create API request.</p>

<p><strong>Notes:</strong></p>

<ul><li>Notifications are limited to 5 per output and job. Output notifications do not count towards the job total. <a href="https://support.brightcove.com/en/contact/create">Contact us</a> if you need more.</li>
	<li>Notification payloads may repeat notifications for jobs. You should parse the payload body by job ID then state.</li>
	<li>Notification handlers on servers built on HTTP2 are not currenly supported. Notifications sent to HTTP2 servers may fail to be delivered without returning any error.</li>
</ul><aside class="bcls-aside bcls-aside--information">For more information on notifications, see <a href="zencoder-getting-notifications-when-videos-are-finished.html">Getting Notifications When Videos Are Finished</a>.

<p>Also note that, although output notifications contain the current state of the job, you should only rely on <strong>job</strong> notifications to determine when the job is complete.</p>
</aside></section><section class="bcls-section"><h2 id="notifications">notifications</h2>
<code class="notranslate">notifications:Array</code>

<p><strong>API Versions:</strong> V1, V2</p>

<p><strong>Valid Values:</strong> An array of notification strings (valid email addresses or URLs), or hashes of <a class="notranslate" href="#notification_url">url</a> and <a class="notranslate" href="#notification_format">format</a>.</p>

<p><strong>Compatible Job Types:</strong> All</p>

<p><strong>Description:</strong></p>

<p>Specify one or more HTTP URLs or email addresses to notify with a webhook when a job or output is complete.</p>

<p>For HTTP notifications, the notification API request is sent from Zencoder to your server as a <code>POST</code> to the notification URL, and is either JSON or XML containing two or three values. The first is a Job ID. This ID matches the ID you received when you submitted the initial job request. Second is a status â€“ either â€˜finishedâ€™, â€˜failedâ€™, or â€˜cancelledâ€™. If a job contains multiple outputs, this notification also contains the output label you supplied when the job was initially created.</p>

<p>HTTP notifications will send JSON or XML (depending on the requested <a class="notranslate" href="#notification_format">format</a>).</p>

<p><strong>Notification Contents</strong> vary depending on the <a href="zencoder-getting-notifications-when-videos-are-finished.html">API version used</a>.</p>

<p>If Zencoder is unable to successfully connect to the target server when sending a notification, the notification will be queued to try again. The retry schedule is covered in the <a href="zencoder-getting-notifications-when-videos-are-finished.html">notifications guide</a>.</p>

<p><strong>Authorization and Security</strong></p>

<p>For authenticated HTTP notifications, include a username and password in the notification URL using this syntax: https://username:password@www.example.com/path/to/notification/action</p>

<p>For HTTPS, simply specify a URL using <code>https://</code> will force the notification to be sent securely using SSL.</p>

<p><strong>Note:</strong> API V1 only supports output notifications, not job notifications.</p>

<pre class="line-numbers">
<code class="language-json notranslate">{
  "input": "s3://zencodertesting/test.mov",
  "notifications": [
    "dev@example.com",
    "http://user:pass@example.com/path/to/notification/action",
    {
      "format": "xml",
      "url": "https://example.com/notifications.html"
    }
  ],
  "outputs": [
    {
      "notifications": [
        "dev@example.com",
        "http://user:pass@example.com/path/to/notification/action",
        {
          "format": "xml",
          "url": "https://example.com/notifications.html"
        }
      ]
    }
  ]
}</code></pre>

<p><strong>See Also:</strong> <a class="notranslate" href="#notification_url">url</a>, <a class="notranslate" href="#notification_format">format</a>, and <a class="notranslate" href="#notification_headers">headers</a></p>
</section><section class="bcls-section"><h2 id="notification_url">url</h2>
<code class="notranslate">url:String</code>

<p><strong>API Versions:</strong> V1, V2</p>

<p><strong>Parent:</strong> <a class="notranslate" href="#notifications">notifications</a></p>

<p><strong>Valid Values:</strong> A valid HTTP or HTTPS URL to notify, optionally including HTTP Auth credentials</p>

<p><strong>Compatible Job Types:</strong> All</p>

<p><strong>Examples:</strong></p>

<ul><li class="notranslate">https://username:password@example.com/notification/path</li>
	<li class="notranslate">http://example.com/notification-handler.php</li>
</ul><p><strong>Description:</strong></p>

<p>A URL to <a href="zencoder-getting-notifications-when-videos-are-finished.html">notify</a> when a job is complete.</p>

<p>Use the <a class="notranslate" href="#notification_url">url</a> option when specifying <a class="notranslate" href="#notifications">notifications</a> as a hash, including a <a class="notranslate" href="#notification_format">format</a>. If you don't need to specify a format, you can simply include the URL as an item in the notifications array.</p>

<p>For authenticated HTTP notifications, include a username and password in the notification URL using this syntax: https://username:password@www.example.com/path/to/notification/action.</p>

<p>For HTTPS, simply specify a URL using <code>https://</code> so a notification would be sent securely using SSL.</p>

<p><strong>Notification Contents</strong> vary depending on the <a href="zencoder-getting-notifications-when-videos-are-finished.html">API version used</a>.</p>

<p>If Zencoder is unable to successfully connect to the target server when sending a notification, the notification will be queued to try again. The notification will be attempted up to 20 times, with the delay between attempts doubling each time.</p>

<p><strong>Authorization and Security</strong></p>

<p>For authenticated HTTP notifications, include a username and password in the notification URL using this syntax: https://username:password@www.example.com/path/to/notification/action</p>

<p>For HTTPS, simply specify a URL using <code>https://</code> will force the notification to be sent securely using SSL.</p>

<p><strong>Notes:</strong> API V1 only supports output notifications, not job notifications.</p>

<pre class="line-numbers">
<code class="language-json notranslate">{
  "input": "s3://zencodertesting/test.mov",
  "notifications": [
    {
      "url": "https://example.com/notifications.html"
    }
  ],
  "outputs": [
    {
      "notifications": [
        {
          "url": "https://example.com/notifications.html"
        }
      ]
    }
  ]
}</code></pre>

<p><strong>See Also:</strong> <a class="notranslate" href="#notifications">notifications</a>, <a class="notranslate" href="#notification_format">format</a>, and <a class="notranslate" href="#notification_headers">headers</a></p>
</section><section class="bcls-section"><h2 id="notification_format">format</h2>
<code class="notranslate">format:String</code>

<p><strong>API Versions:</strong> V1, V2</p>

<p><strong>Parent:</strong> <a class="notranslate" href="#notifications">notifications</a></p>

<p><strong>Valid Values:</strong> <code>json</code> or <code>xml</code></p>

<p><strong>Compatible Job Types:</strong> All</p>

<p><strong>Example:</strong> <code>json</code></p>

<p><strong>Description:</strong></p>

<p>A format and content type for <a class="notranslate" href="#notifications">notifications</a>.</p>

<p>By default, HTTP notifications are in JSON, with an HTTP Content-Type of <code>application/json</code>.</p>

<p>For XML notifications, set format to 'xml'. This will return notifications in XML format, with an HTTP Content-Type of <code>application/xml</code>.</p>

<p><strong>Note:</strong> API V1 notifications do not include an HTTP Content-Type unless you specify a format.</p>

<pre class="line-numbers">
<code class="language-json notranslate">{
  "input": "s3://zencodertesting/test.mov",
  "notifications": [
    {
      "format": "xml",
      "url": "https://example.com/notifications.html"
    }
  ],
  "outputs": [
    {
      "notifications": [
        {
          "format": "xml",
          "url": "https://example.com/notifications.html"
        }
      ]
    }
  ]
}</code></pre>

<p><strong>See Also:</strong> <a class="notranslate" href="#notifications">notifications</a>, <a class="notranslate" href="#notification_format">format</a>, and <a class="notranslate" href="#notification_headers">headers</a></p>
</section><section class="bcls-section"><h2 id="notification_headers">headers</h2>
<code class="notranslate">headers:Hash</code>

<p><strong>API Versions:</strong> V2</p>

<p><strong>Parent:</strong> <a class="notranslate" href="#notifications">notifications</a></p>

<p><strong>Valid Values:</strong> Keys must start with a letter and can contain letters, numbers, and -. Values can contain any string.</p>

<p><strong>There is a length limit of 100 characters for each notification header.</strong></p>

<p><strong>Compatible Job Types:</strong> All</p>

<p><strong>Example:</strong> <code>{'Accept': 'application/json', 'Internal-Id': '12345'}</code></p>

<p><strong>Description:</strong></p>

<p>By default, HTTP notifications are sent with an HTTP Content-Type, along with a User-Agent. If your application requires additional headers, they can be specified here.</p>

<p>The header is set as the key of the hash, and its value is the value of the hash.</p>

<pre class="line-numbers">
<code class="language-json notranslate">{
  "input": "s3://zencodertesting/test.mov",
  "notifications": [
    {
      "format": "json",
      "url": "https://example.com/notifications.html",
      "headers": {
        "Accept": "application/json",
        "Internal-Id": "12345"
      }
    }
  ],
  "outputs": [
    {
      "notifications": [
        {
          "format": "json",
          "url": "https://example.com/notifications.html",
          "headers": {
            "Accept": "application/json",
            "Internal-Id": "12345"
          }
        }
      ]
    }
  ]
}</code></pre>

<p><strong>See Also:</strong> <a class="notranslate" href="#notifications">notifications</a>, <a class="notranslate" href="#notification_url">url</a>, and <a class="notranslate" href="#notification_format">format</a></p>
</section><section class="bcls-section"><h2 id="event">event</h2>
<code class="notranslate">event:String</code>

<p><strong>API Versions:</strong> V2</p>

<p><strong>Parent:</strong> <a class="notranslate" href="#notifications">notifications</a></p>

<p><strong>Valid Values:</strong> <code>first_segment_uploaded</code>, <code>seamless_playback</code></p>

<p><strong>Compatible Job Types:</strong> All</p>

<p><strong>Example:</strong> <code>{'event': 'seamless_playback'}</code></p>

<p><strong>Description:</strong></p>

<p>Live outputs have additional notification events corresponding to the progress of the file.</p>

<p>Notifications can be sent when the first segment of a Live output has been uploaded and when enough segments have been uploaded to enable seamless playback.</p>

<p>Event does not apply to regular job and output notifications, only to those for Live outputs.</p>

<pre class="line-numbers">
<code class="language-json notranslate">{
  "input": "s3://zencodertesting/test.mov",
  "outputs": [
    {
      "live_stream": true,
      "type": "segmented",
      "notifications": [
        {
          "url": "http://zencoderfetcher/notifications.html",
          "event": "seamless_playback"
        }
      ]
    }
  ]
}</code></pre>

<p><strong>See Also:</strong> <a class="notranslate" href="#notifications">notifications</a>, <a class="notranslate" href="#notification_url">url</a>, and <a class="notranslate" href="#notification_format">format</a></p>
</section></article></div>
      
</div>

</div>


<section class="views-element-container block block-views block-views-blockrelated-content-by-field-block-1 clearfix" id="block-views-block-related-content-by-field-block-1">
  
    

      <div class="form-group"><div class="view view-related-content-by-field view-id-related_content_by_field view-display-id-block_1 js-view-dom-id-9abe05eb5c70786938e15849b978efdd22d91d985230d8a5f441aec789b64b23">
  
    
      <div class="view-header">
      <h2>Related content</h2>
    </div>
      
      <div class="view-content">
      <div class="item-list">
  
  <ul>

          <li><div class="views-field views-field-title"><span class="field-content"><span class="content-type-support_doc"><a href="zencoder-encoding-settings-job.html" hreflang="en">Zencoder Encoding Settings: Job</a></span></span></div></li>
          <li><div class="views-field views-field-title"><span class="field-content"><span class="content-type-support_doc"><a href="zencoder-encoding-settings-general-output-settings.html" hreflang="en">Zencoder Encoding Settings: General Output Settings</a></span></span></div></li>
          <li><div class="views-field views-field-title"><span class="field-content"><span class="content-type-support_doc"><a href="zencoder-getting-notifications-when-videos-are-finished.html" hreflang="en">Zencoder: Getting Notifications When Videos Are Finished</a></span></span></div></li>
    
  </ul>

</div>

    </div>
  
          </div>
</div>

  </section>


  </div>

              </section>

                </div>
  </div>

      
  
  </div>

    
    <script type="application/json" data-drupal-selector="drupal-settings-json">{"path":{"baseUrl":"\/","scriptPath":null,"pathPrefix":"","currentPath":"node\/17881","currentPathIsAdmin":false,"isFront":false,"currentLanguage":"en"},"pluralDelimiter":"\u0003","google_analytics":{"trackOutbound":true,"trackMailto":true,"trackDownload":true,"trackDownloadExtensions":"7z|aac|arc|arj|asf|asx|avi|bin|csv|doc(x|m)?|dot(x|m)?|exe|flv|gif|gz|gzip|hqx|jar|jpe?g|js|mp(2|3|4|e?g)|mov(ie)?|msi|msp|pdf|phps|png|ppt(x|m)?|pot(x|m)?|pps(x|m)?|ppam|sld(x|m)?|thmx|qtm?|ra(m|r)?|sea|sit|tar|tgz|torrent|txt|wav|wma|wmv|wpd|xls(x|m|b)?|xlt(x|m)|xlam|xml|z|zip"},"bootstrap":{"forms_has_error_value_toggle":1,"modal_animation":1,"modal_backdrop":"true","modal_focus_input":1,"modal_keyboard":1,"modal_select_text":1,"modal_show":1,"modal_size":"","popover_enabled":1,"popover_animation":1,"popover_auto_close":1,"popover_container":"body","popover_content":"","popover_delay":"0","popover_html":0,"popover_placement":"right","popover_selector":"","popover_title":"","popover_trigger":"click"},"ajaxTrustedUrl":{"form_action_p_pvdeGsVG5zNF_XLGPTvYSKCf43t8qZYSwcfZl2uzM":true},"user":{"uid":0,"permissionsHash":"3b7fdb4927baca3ee2939edeb777485b3e2c2d36cf8c80e0d8f49c6dc5e2eeca"}}</script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@3.4.1/dist/js/bootstrap.min.js" integrity="sha256-nuL8/2cJ5NDSSwnKD8VqreErSWHtnEP9E7AySL+1ev4=" crossorigin="anonymous"></script>

  <script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","licenseKey":"e78a80aa93","applicationID":"129613202","transactionName":"YwBUZkcFVktUWhJQX1pKd1FBDVdWGkkHXlVrBldRXQE=","queueTime":0,"applicationTime":28,"atts":"T0dXEA8fRUU=","errorBeacon":"bam.nr-data.net","agent":""}</script></body>
</html>
